"use strict";class t{input;position=0;constructor(t){this.input=t}tokenize(){const t=[];for(;this.position<this.input.length;){"<"===this.input[this.position]?this.input.startsWith("\x3c!--",this.position)?t.push(this.readComment()):this.input.startsWith("<!DOCTYPE",this.position)?t.push(this.readDoctype()):"/"===this.input[this.position+1]?t.push(this.readEndTag()):t.push(this.readStartTag()):t.push(this.readText())}return t}readDoctype(){this.position+=9;const t=this.readUntil(">").trim();return this.position++,{type:"Doctype",value:t}}readStartTag(){this.position++;const t=this.readUntil(/[ \/>]/).trim(),e={};for(;this.position<this.input.length&&">"!==this.input[this.position];){const t=this.readUntil("=").trim();if("="===this.input[this.position]){this.position++;const i=this.input[this.position];this.position++;const s=this.readUntil(new RegExp(`${i}`));e[t]=s,this.position++}}return this.position++,{type:"StartTag",name:t,attributes:e}}readEndTag(){this.position+=2;const t=this.readUntil(">").trim();return this.position++,{type:"EndTag",name:t}}readComment(){this.position+=4;const t=this.readUntil("--\x3e").trim();return this.position+=3,{type:"Comment",value:t}}readText(){return{type:"Text",value:this.readUntil("<").trim()}}readUntil(t){const e=this.position;for(;this.position<this.input.length&&!("string"==typeof t?this.input[this.position]===t:t.test(this.input.substring(this.position)));)this.position++;return this.input.slice(e,this.position)||""}}exports.HTMLASTOptimizer=class{optimize(t){return this.removeEmptyNodes(t.root),this.mergeTextNodes(t.root),t}removeEmptyNodes(t){t.children&&(t.children=t.children.filter((t=>!!("Text"!==t.type||""!==t.value?.trim()&&t.value)&&(this.removeEmptyNodes(t),!0))))}mergeTextNodes(t){if(t.children){let e=0;for(;e<t.children.length-1;){const i=t.children[e],s=t.children[e+1];"Text"===i.type&&"Text"===s.type?(i.value=(i.value||"")+(s.value||""),t.children.splice(e+1,1)):(this.mergeTextNodes(i),e++)}}}},exports.HTMLCodeGenerator=class{selfClosingTags;constructor(t=["img","input","br","hr","meta","link"]){this.selfClosingTags=t}generateHTML(t){if("Text"===t.type)return t.value||"";if("Comment"===t.type)return`\x3c!-- ${t.value||""} --\x3e`;if("Element"===t.type){const e=this.generateAttributes(t.attributes||{}),i=t.children?.map((t=>this.generateHTML(t))).join("")||"";return this.isSelfClosingTag(t.name)?`<${t.name}${e} />`:`<${t.name}${e}>${i}</${t.name}>`}return""}generateAttributes(t){return Object.entries(t).map((([t,e])=>` ${t}="${e}"`)).join("")}isSelfClosingTag(t){return this.selfClosingTags.includes(t||"")}},exports.HTMLParser=class{tokenizer;constructor(){this.tokenizer=new t("")}parse(e){this.tokenizer=new t(e);const i=this.tokenizer.tokenize();return this.buildAST(i)}buildAST(t){const e={type:"Element",name:"root",children:[]},i=[e];let s=e;for(const e of t)switch(e.type){case"Doctype":s.children?.push({type:"Doctype",value:e.value});break;case"StartTag":const t={type:"Element",name:e.name,attributes:e.attributes,children:[]};s.children?.push(t),i.push(t),s=t;break;case"EndTag":i.length>1&&(i.pop(),s=i[i.length-1]);break;case"Text":case"Comment":s.children?.push({type:e.type,value:e.value})}if(i.length>1)throw new Error("Unclosed tags detected");return e}},exports.HTMLTokenizer=t,exports.HTMLValidator=class{validate(t){const e=[];return this.traverse(t,e),{valid:0===e.length,errors:e}}traverse(t,e){if("Element"===t.type){t.name?.match(/^[a-zA-Z0-9\-]+$/)||e.push(`Invalid tag name: ${t.name||"undefined"}`);for(const i of t.children||[])this.traverse(i,e)}}};
//# sourceMappingURL=index.cjs.map
