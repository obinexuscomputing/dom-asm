class e{input;position=0;line=1;column=1;constructor(e){this.input=e}tokenize(){const e=[];for(;this.position<this.input.length;){"<"===this.peek()?this.match("\x3c!--")?e.push(this.readComment()):this.match("<!DOCTYPE")?e.push(this.readDoctype()):"/"===this.peek(1)?e.push(this.readEndTag()):e.push(this.readStartTag()):e.push(this.readText())}return e}readDoctype(){const{line:e,column:t}=this.getCurrentLocation();this.consume(9);const s=this.readUntil(">").trim();return this.consume(),{type:"Doctype",value:s,line:e,column:t}}readStartTag(){const{line:e,column:t}=this.getCurrentLocation();this.consume();const s=this.readUntil(/[ \/>]/).toLowerCase().trim(),i={};let n=!1;for(;this.peek()&&">"!==this.peek();){if(this.skipWhitespace(),"/"===this.peek()){n=!0,this.consume();break}const e=this.readUntil(/[= \/>]/).trim();if(!e)break;if("="===this.peek()){this.consume();const t=this.peek();if('"'===t||"'"===t){this.consume();const s=this.readUntil(t);this.consume(),i[e]=s}else i[e]=this.readUntil(/[ \/>]/)}else i[e]="true"}return this.consume(),{type:"StartTag",name:s,attributes:i,selfClosing:n,line:e,column:t}}readEndTag(){const{line:e,column:t}=this.getCurrentLocation();this.consume(2);const s=this.readUntil(">").toLowerCase().trim();return this.consume(),{type:"EndTag",name:s,line:e,column:t}}readComment(){const{line:e,column:t}=this.getCurrentLocation();this.consume(4);const s=this.readUntil("--\x3e");return this.consume(3),{type:"Comment",value:s,line:e,column:t}}readText(){const{line:e,column:t}=this.getCurrentLocation();return{type:"Text",value:this.readUntil("<").trim(),line:e,column:t}}readUntil(e){let t="";for(;this.peek()&&!this.matches(e);)t+=this.consume();return t}peek(e=0){return this.input[this.position+e]||""}match(e){return this.input.startsWith(e,this.position)}matches(e){const t=this.input.slice(this.position);return"string"==typeof e?t.startsWith(e):e.test(t)}consume(e=1){let t="";for(let s=0;s<e;s++){const e=this.input[this.position];"\n"===e?(this.line++,this.column=1):this.column++,t+=e,this.position++}return t}skipWhitespace(){for(;/\s/.test(this.peek());)this.consume()}getCurrentLocation(){return{line:this.line,column:this.column}}}class t{tokenizer;constructor(){this.tokenizer=new e("")}parse(t){this.tokenizer=new e(t);const s=this.tokenizer.tokenize();return this.buildAST(s)}buildAST(e){const t={type:"Element",name:"root",children:[]},s=[t];let i=t;for(const t of e)switch(t.type){case"Doctype":i.children?.push({type:"Doctype",value:t.value});break;case"StartTag":const e={type:"Element",name:t.name,attributes:t.attributes,children:[]};i.children?.push(e),s.push(e),i=e;break;case"EndTag":s.length>1&&(s.pop(),i=s[s.length-1]);break;case"Text":case"Comment":i.children?.push({type:t.type,value:t.value})}if(s.length>1)throw new Error("Unclosed tags detected");return t}}class s{validate(e){const t=[];return this.traverse(e,t),{valid:0===t.length,errors:t}}traverse(e,t){if("Element"===e.type){e.name?.match(/^[a-zA-Z0-9\-]+$/)||t.push(`Invalid tag name: ${e.name||"undefined"}`);for(const s of e.children||[])this.traverse(s,t)}}}class i{optimize(e){return this.removeEmptyNodes(e.root),this.mergeTextNodes(e.root),e}removeEmptyNodes(e){e.children&&(e.children=e.children.filter((e=>!!("Text"!==e.type||""!==e.value?.trim()&&e.value)&&(this.removeEmptyNodes(e),!0))))}mergeTextNodes(e){if(e.children){let t=0;for(;t<e.children.length-1;){const s=e.children[t],i=e.children[t+1];"Text"===s.type&&"Text"===i.type?(s.value=(s.value||"")+(i.value||""),e.children.splice(t+1,1)):(this.mergeTextNodes(s),t++)}}}}class n{selfClosingTags;constructor(e=["img","input","br","hr","meta","link"]){this.selfClosingTags=e}generateHTML(e){if("Text"===e.type)return e.value||"";if("Comment"===e.type)return`\x3c!-- ${e.value||""} --\x3e`;if("Element"===e.type){const t=this.generateAttributes(e.attributes||{}),s=e.children?.map((e=>this.generateHTML(e))).join("")||"";return this.isSelfClosingTag(e.name)?`<${e.name}${t} />`:`<${e.name}${t}>${s}</${e.name}>`}return""}generateAttributes(e){return Object.entries(e).map((([e,t])=>` ${e}="${t}"`)).join("")}isSelfClosingTag(e){return this.selfClosingTags.includes(e||"")}}export{i as HTMLASTOptimizer,n as HTMLCodeGenerator,t as HTMLParser,e as HTMLTokenizer,s as HTMLValidator};
//# sourceMappingURL=index.js.map
