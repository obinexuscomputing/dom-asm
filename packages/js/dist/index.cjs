"use strict";var e;exports.TokenType=void 0,(e=exports.TokenType||(exports.TokenType={}))[e.Keyword=0]="Keyword",e[e.Identifier=1]="Identifier",e[e.Operator=2]="Operator",e[e.Delimiter=3]="Delimiter",e[e.Literal=4]="Literal",e[e.TemplateLiteral=5]="TemplateLiteral",e[e.Comment=6]="Comment",e[e.EndOfStatement=7]="EndOfStatement";exports.ASTBuilder=class{build(e){const t={type:"Program",children:[]};let r=0;function n(){const t=e[r];if(t.type===exports.TokenType.Literal)return r++,{type:"Literal",value:t.value};if(t.type===exports.TokenType.Identifier)return r++,{type:"Identifier",value:t.value};if(t.type===exports.TokenType.Keyword&&"const"===t.value){r++;const e=n();r++;const t=n();return r++,{type:"VariableDeclaration",value:"const",children:[e,t]}}throw new Error(`Unexpected token: ${t.type===exports.TokenType.EndOfStatement?"EOF":t.value}`)}for(;r<e.length&&e[r].type!==exports.TokenType.EndOfStatement;)t.children?.push(n());return t}},exports.ASTOptimizer=class{optimize(e){return function e(t){if("VariableDeclaration"===t.type&&t.children){const e=t.children[1];if("Literal"===e.type)return{type:"InlineConstant",value:`${t.children[0].value}=${e.value}`}}return t.children&&(t.children=t.children.map(e)),t}(e)}},exports.Tokenizer=class{constructor(){this.keywords=new Set(["const","let","var","if","else","function","return","for","while"]),this.operators=new Set(["=","+","-","*","/","%","===","!==","<",">","&&","||","!"]),this.delimiters=new Set([";","{","}","(",")","[","]"]),this.singleCharDelimiters=new Set([";","{","}","(",")","[","]"]),this.previousToken=null}tokenize(e){const t=[];let r=0;const n=(e,r)=>{this.previousToken={type:e,value:r},t.push(this.previousToken)};for(;r<e.length;){let t=e[r];if(/\s/.test(t)){"\n"===t&&this.previousToken&&this.previousToken.type!==exports.TokenType.Delimiter&&this.previousToken.type!==exports.TokenType.Comment&&this.previousToken.type!==exports.TokenType.TemplateLiteral&&n(exports.TokenType.Delimiter,";"),r++;continue}if("/"===t&&"/"===e[r+1]){let t="";for(r+=2;r<e.length&&"\n"!==e[r];)t+=e[r++];n(exports.TokenType.Comment,t);continue}if("/"===t&&"*"===e[r+1]){let t="";for(r+=2;r<e.length&&("*"!==e[r]||"/"!==e[r+1]);)if(t+=e[r++],r>=e.length)throw new Error("Unterminated multi-line comment");r+=2,n(exports.TokenType.Comment,t);continue}if("`"===t){let t="";for(r++;r<e.length&&"`"!==e[r];)if("$"===e[r]&&"{"===e[r+1]){for(t+="${",r+=2;r<e.length&&"}"!==e[r];)t+=e[r++];t+="}",r++}else t+=e[r++];if(r>=e.length)throw new Error("Unterminated template literal");r++,n(exports.TokenType.TemplateLiteral,t);continue}if(this.singleCharDelimiters.has(t)){if(";"===t&&this.previousToken?.type===exports.TokenType.TemplateLiteral){r++;continue}n(exports.TokenType.Delimiter,t),r++;continue}let o="";for(;this.operators.has(o+e[r]);)o+=e[r++];if(o)n(exports.TokenType.Operator,o);else if(/[a-zA-Z_$]/.test(t)){let t="";for(;/[a-zA-Z0-9_$]/.test(e[r]);)t+=e[r++];n(this.keywords.has(t)?exports.TokenType.Keyword:exports.TokenType.Identifier,t)}else{if(!/[0-9]/.test(t))throw new Error(`Unexpected character: ${t}`);{let t="";for(;/[0-9.]/.test(e[r]);)t+=e[r++];n(exports.TokenType.Literal,t)}}}return this.previousToken&&this.previousToken.type!==exports.TokenType.Delimiter&&n(exports.TokenType.Delimiter,";"),n(exports.TokenType.EndOfStatement,"EOF"),t}};
//# sourceMappingURL=index.cjs.map
