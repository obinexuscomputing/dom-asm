"use strict";var e;exports.JSTokenType=void 0,(e=exports.JSTokenType||(exports.JSTokenType={}))[e.Keyword=0]="Keyword",e[e.Identifier=1]="Identifier",e[e.Operator=2]="Operator",e[e.Delimiter=3]="Delimiter",e[e.Literal=4]="Literal",e[e.TemplateLiteral=5]="TemplateLiteral",e[e.Comment=6]="Comment",e[e.EndOfStatement=7]="EndOfStatement";exports.JSASTBuilder=class{tokens;position;constructor(e){this.tokens=e,this.position=0}currentToken(){return this.position<this.tokens.length?this.tokens[this.position]:null}consumeToken(){if(this.position>=this.tokens.length)throw new Error("Unexpected end of input");return this.tokens[this.position++]}peekToken(){return this.position+1<this.tokens.length?this.tokens[this.position+1]:null}parseProgram(){const e={type:"Program",children:[]};for(;this.position<this.tokens.length-1;){const t=this.parseStatement();t&&e.children.push(t)}return e}parseStatement(){const e=this.currentToken();if(!e)return null;if(e.type===exports.JSTokenType.Keyword&&"const"===e.value)return this.parseVariableDeclaration();throw new Error(`Unexpected token: ${e.value}`)}parseVariableDeclaration(){this.consumeToken();const e=this.consumeToken();if(!e||e.type!==exports.JSTokenType.Identifier)throw new Error("Expected identifier after 'const'");const t=this.consumeToken();if(!t||t.type!==exports.JSTokenType.Operator||"="!==t.value)throw new Error("Expected '=' after identifier");const r=this.consumeToken();if(!r||r.type!==exports.JSTokenType.Literal)throw new Error("Expected literal value after '='");const i=this.consumeToken();if(!i||i.type!==exports.JSTokenType.Delimiter||";"!==i.value)throw new Error("Expected ';' after value");return{type:"VariableDeclaration",children:[{type:"Identifier",value:e.value,children:[]},{type:"Literal",value:r.value,children:[]}]}}buildAST(){return this.parseProgram()}},exports.JSASTOptimizer=class{constructor(){}optimize(e){return function e(t){if("VariableDeclaration"===t.type&&t.children){const e=t.children[1];if("Literal"===e.type)return{type:"InlineConstant",value:`${t.children[0].value}=${e.value}`,children:[]}}return t.children&&(t.children=t.children.map(e)),t}(e)}},exports.JSCodeGenerator=class{constructor(){}generate(e){if("Program"===e.type)return e.children.map((e=>this.generate(e))).join("\n");if("VariableDeclaration"===e.type){const t=e.children.find((e=>"Identifier"===e.type)),r=e.children.find((e=>"Literal"===e.type));return`const ${t?.value} = ${r?.value};`}return""}},exports.JSParser=class{parse(e){return"Program"===e.type?e.children?.map((e=>this.parse(e))):"VariableDeclaration"===e.type?`Declare ${e.children?.map((e=>this.parse(e))).join(" ")}`:"InlineConstant"===e.type?`Inline ${e.value}`:e.value}},exports.JSTokenizer=class{keywords=new Set(["const","let","var","if","else","function","return"]);operators=new Set(["=","+","-","*","/","%","===","!==","<",">"]);delimiters=new Set([";","{","}","(",")","[","]"]);tokenize(e){const t=[];let r=0;for(;r<e.length;){let i=e[r];if(/\s/.test(i))r++;else if(/[a-zA-Z_$]/.test(i)){let i="";for(;r<e.length&&/[a-zA-Z0-9_$]/.test(e[r]);)i+=e[r++];t.push({type:this.keywords.has(i)?exports.JSTokenType.Keyword:exports.JSTokenType.Identifier,value:i})}else if(/[0-9]/.test(i)){let i="";for(;r<e.length&&/[0-9.]/.test(e[r]);)i+=e[r++];t.push({type:exports.JSTokenType.Literal,value:i})}else if(this.operators.has(i))t.push({type:exports.JSTokenType.Operator,value:i}),r++;else{if(!this.delimiters.has(i))throw new Error(`Unexpected character: ${i}`);t.push({type:exports.JSTokenType.Delimiter,value:i}),r++}}return t.push({type:exports.JSTokenType.EndOfStatement,value:"EOF"}),t}},exports.JSValidator=class{errors;constructor(){this.errors=[]}validate(e){return this.errors=[],this.traverse(e),this.errors}traverse(e){switch(e.type){case"Program":this.validateProgram(e);break;case"VariableDeclaration":this.validateVariableDeclaration(e);break;case"InlineConstant":this.validateInlineConstant(e);break;case"Identifier":this.validateIdentifier(e);break;case"Literal":this.validateLiteral(e);break;default:this.errors.push(`Unknown node type: ${e.type}`)}if(e.children)for(const t of e.children)this.traverse(t)}validateProgram(e){e.children&&0!==e.children.length||this.errors.push("Program must contain at least one statement.")}validateVariableDeclaration(e){const[t,r]=e.children;t&&"Identifier"===t.type||this.errors.push("VariableDeclaration must have a valid identifier."),r&&"Literal"===r.type||this.errors.push("VariableDeclaration must have a valid literal value.")}validateInlineConstant(e){e.value||this.errors.push("InlineConstant must have a value.")}validateIdentifier(e){e.value&&/^[a-zA-Z_$][a-zA-Z0-9_$]*$/.test(e.value)||this.errors.push(`Invalid identifier name: ${e.value}`)}validateLiteral(e){e.value||this.errors.push("Literal must have a value.")}};
//# sourceMappingURL=index.cjs.map
