var e;!function(e){e[e.Keyword=0]="Keyword",e[e.Identifier=1]="Identifier",e[e.Operator=2]="Operator",e[e.Delimiter=3]="Delimiter",e[e.Literal=4]="Literal",e[e.TemplateLiteral=5]="TemplateLiteral",e[e.Comment=6]="Comment",e[e.EndOfStatement=7]="EndOfStatement"}(e||(e={}));class t{constructor(){this.keywords=new Set(["const","let","var","if","else","function","return","for","while","true","false"]),this.operators=new Set(["=","+","-","*","/","%","===","!==","<",">","&&","||","!","==","=>","+=","-=","*=","/=","||=","&&=","??","?."]),this.delimiters=new Set([";","{","}","(",")","[","]"]),this.singleCharDelimiters=new Set([";","{","}","(",")","[","]"]),this.previousToken=null}isNumericStart(e){return/[0-9]/.test(e)}isValidNumber(e){if((e.match(/\./g)||[]).length>1)return!1;if(/[eE]/.test(e)){const t=e.split(/[eE]/);if(2!==t.length)return!1;const[r,i]=t;if(!this.isValidNumber(r))return!1;const n=i.replace(/^[+-]/,"");if(!/^\d+$/.test(n))return!1}return!0}tokenize(t){const r=[];let i=0;const n=(e,t)=>{this.previousToken={type:e,value:t},r.push(this.previousToken)},l=()=>this.previousToken&&this.previousToken.type!==e.Delimiter&&this.previousToken.type!==e.Comment&&this.previousToken.type!==e.TemplateLiteral&&!r.some((t=>t.type===e.Delimiter&&";"===t.value&&r.indexOf(t)===r.length-1)),s=()=>{let e="",r=!1,n=!1;if("."===t[i]){if(!/[0-9]/.test(t[i+1]))throw new Error(`Unexpected character: ${t[i]}`);e=".",i++}for(;i<t.length;){const l=t[i],s=t[i+1];if(/[0-9]/.test(l))e+=l;else if("."!==l||r||n){if("e"!==l&&"E"!==l||n){if("."===l&&r)throw new Error("Invalid number format");break}n=!0,e+=l,"+"!==s&&"-"!==s||(e+=s,i++)}else r=!0,e+=l;i++}if(!this.isValidNumber(e))throw new Error("Invalid number format");return e};for(;i<t.length;){let o=t[i];if(/\s/.test(o)){"\n"===o&&l()&&n(e.Delimiter,";"),i++;continue}if("/"===o&&"/"===t[i+1]){let r="";for(i+=2;i<t.length&&"\n"!==t[i];)r+=t[i++];r.endsWith("\r")&&(r=r.slice(0,-1)),n(e.Comment,r);continue}if("/"===o&&"*"===t[i+1]){let r="";i+=2;let l=1;for(;i<t.length&&l>0;)"/"===t[i]&&"*"===t[i+1]?(l++,r+="/*",i+=2):"*"===t[i]&&"/"===t[i+1]?(l--,l>0&&(r+="*/"),i+=2):r+=t[i++];if(l>0)throw new Error("Unexpected character: EOF");n(e.Comment,r);continue}if("`"===o){let r="";for(i++;i<t.length&&"`"!==t[i];)if("\\"===t[i]){const e=t[i+1];if(!["`","$","\\"].includes(e))throw new Error("Invalid escape sequence");r+="\\"+e,i+=2}else if("$"===t[i]&&"{"===t[i+1]){let e=1;const n=i;for(i+=2;i<t.length&&e>0;)"{"===t[i]&&e++,"}"===t[i]&&e--,i++;r+=t.slice(n,i)}else r+=t[i++];if(i>=t.length)throw new Error("Unterminated template literal");i++,n(e.TemplateLiteral,r);continue}if(this.isNumericStart(o)||"."===o&&this.isNumericStart(t[i+1])){const t=s();n(e.Literal,t);continue}if(this.singleCharDelimiters.has(o)){n(e.Delimiter,o),i++;continue}let a="",c="",h=i;for(;h<t.length&&/[=!<>&|+\-*/%?.]/.test(t[h]);)a+=t[h],this.operators.has(a)&&(c=a),h++;if(a.includes("=>")&&!this.operators.has(a))throw new Error("Unexpected character: >");if(c)i+=c.length,n(e.Operator,c);else{if(!/[a-zA-Z_$]/.test(o))return l()&&n(e.Delimiter,";"),n(e.EndOfStatement,"EOF"),r;{let r="";for(;i<t.length&&/[a-zA-Z0-9_$]/.test(t[i]);)r+=t[i++];if("true"===r||"false"===r)n(e.Literal,r);else{n(this.keywords.has(r)?e.Keyword:e.Identifier,r)}}}}}}class r{build(t){const r={type:"Program",children:[]};let i=0;function n(){const r=t[i];if(r.type===e.Literal)return i++,{type:"Literal",value:r.value};if(r.type===e.Identifier)return i++,{type:"Identifier",value:r.value};if(r.type===e.Keyword&&"const"===r.value){i++;const e=n();i++;const t=n();return i++,{type:"VariableDeclaration",value:"const",children:[e,t]}}throw new Error(`Unexpected token: ${r.type===e.EndOfStatement?"EOF":r.value}`)}for(;i<t.length&&t[i].type!==e.EndOfStatement;)r.children?.push(n());return r}}class i{optimize(e){return function e(t){if("VariableDeclaration"===t.type&&t.children){const e=t.children[1];if("Literal"===e.type)return{type:"InlineConstant",value:`${t.children[0].value}=${e.value}`}}return t.children&&(t.children=t.children.map(e)),t}(e)}}export{r as ASTBuilder,i as ASTOptimizer,e as TokenType,t as Tokenizer};
//# sourceMappingURL=index.js.map
