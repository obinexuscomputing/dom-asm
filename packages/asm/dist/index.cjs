"use strict";function t(t,n){const i=[];return t.forEach((t=>{const e={};t.forEach((t=>{const i=JSON.stringify(n[t]);e[i]||(e[i]=[]),e[i].push(t)})),i.push(...Object.values(e))})),i}function n(t,n){return t.find((t=>t.includes(n)))?.[0]??n}exports.minimizeAutomaton=function(i){const{states:e,transitions:s,initialState:r,acceptingStates:o}=i;let a=function(t,n){const i=t.filter((t=>!n.includes(t)));return[n,i]}(e,o),c=!0;for(;c;)c=!1,a=t(a,s);const u=a.map((t=>t[0])),f={};return u.forEach((t=>{f[t]={},Object.entries(s[t]).forEach((([i,e])=>{f[t][i]=n(a,e)}))})),{states:u,transitions:f,initialState:n(a,r),acceptingStates:o.filter((t=>u.includes(t)))}},exports.optimizeAST=function(t,n){const i=new Map;return function t(e){if(i.has(e.id))return i.get(e.id);const s={...e,transitions:{}};return Object.entries(e.transitions).forEach((([i,r])=>{const o=n.transitions[e.id]?.[i];o&&(s.transitions[i]=t({...e,id:o}).id)})),i.set(e.id,s),s}(t)},exports.validateAST=function(t){const n=new Set;return function t(i){return!!n.has(i.id)||(n.add(i.id),Object.values(i.transitions).every((n=>t({...i,id:n}))))}(t)},exports.validateAutomaton=function(t){return Object.values(t.transitions).every((n=>Object.values(n).every((n=>t.states.includes(n)))))};
//# sourceMappingURL=index.cjs.map
