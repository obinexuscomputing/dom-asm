{"version":3,"file":"index.js","sources":["../node_modules/commander/lib/error.js","../node_modules/commander/lib/argument.js","../node_modules/commander/lib/help.js","../node_modules/commander/lib/option.js","../node_modules/commander/lib/suggestSimilar.js","../node_modules/commander/lib/command.js","../node_modules/commander/index.js","../node_modules/commander/esm.mjs","../src/cli/index.ts"],"sourcesContent":["/**\n * CommanderError class\n * @class\n */\nclass CommanderError extends Error {\n  /**\n   * Constructs the CommanderError class\n   * @param {number} exitCode suggested exit code which could be used with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @constructor\n   */\n  constructor(exitCode, code, message) {\n    super(message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.exitCode = exitCode;\n    this.nestedError = undefined;\n  }\n}\n\n/**\n * InvalidArgumentError class\n * @class\n */\nclass InvalidArgumentError extends CommanderError {\n  /**\n   * Constructs the InvalidArgumentError class\n   * @param {string} [message] explanation of why argument is invalid\n   * @constructor\n   */\n  constructor(message) {\n    super(1, 'commander.invalidArgument', message);\n    // properly capture stack trace in Node.js\n    Error.captureStackTrace(this, this.constructor);\n    this.name = this.constructor.name;\n  }\n}\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Argument {\n  /**\n   * Initialize a new command argument with the given name and description.\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   */\n\n  constructor(name, description) {\n    this.description = description || '';\n    this.variadic = false;\n    this.parseArg = undefined;\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.argChoices = undefined;\n\n    switch (name[0]) {\n      case '<': // e.g. <required>\n        this.required = true;\n        this._name = name.slice(1, -1);\n        break;\n      case '[': // e.g. [optional]\n        this.required = false;\n        this._name = name.slice(1, -1);\n        break;\n      default:\n        this.required = true;\n        this._name = name;\n        break;\n    }\n\n    if (this._name.length > 3 && this._name.slice(-3) === '...') {\n      this.variadic = true;\n      this._name = this._name.slice(0, -3);\n    }\n  }\n\n  /**\n   * Return argument name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    return this._name;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Argument}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI command arguments into argument values.\n   *\n   * @param {Function} [fn]\n   * @return {Argument}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Only allow argument value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Argument}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Make argument required.\n   */\n  argRequired() {\n    this.required = true;\n    return this;\n  }\n\n  /**\n   * Make argument optional.\n   */\n  argOptional() {\n    this.required = false;\n    return this;\n  }\n}\n\n/**\n * Takes an argument and returns its human readable equivalent for help usage.\n *\n * @param {Argument} arg\n * @return {string}\n * @api private\n */\n\nfunction humanReadableArgName(arg) {\n  const nameOutput = arg.name() + (arg.variadic === true ? '...' : '');\n\n  return arg.required\n    ? '<' + nameOutput + '>'\n    : '[' + nameOutput + ']';\n}\n\nexports.Argument = Argument;\nexports.humanReadableArgName = humanReadableArgName;\n","const { humanReadableArgName } = require('./argument.js');\n\n/**\n * TypeScript import types for JSDoc, used by Visual Studio Code IntelliSense and `npm run typescript-checkJS`\n * https://www.typescriptlang.org/docs/handbook/jsdoc-supported-types.html#import-types\n * @typedef { import(\"./argument.js\").Argument } Argument\n * @typedef { import(\"./command.js\").Command } Command\n * @typedef { import(\"./option.js\").Option } Option\n */\n\n// Although this is a class, methods are static in style to allow override using subclass or just functions.\nclass Help {\n  constructor() {\n    this.helpWidth = undefined;\n    this.sortSubcommands = false;\n    this.sortOptions = false;\n    this.showGlobalOptions = false;\n  }\n\n  /**\n   * Get an array of the visible subcommands. Includes a placeholder for the implicit help command, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Command[]}\n   */\n\n  visibleCommands(cmd) {\n    const visibleCommands = cmd.commands.filter(cmd => !cmd._hidden);\n    if (cmd._hasImplicitHelpCommand()) {\n      // Create a command matching the implicit help command.\n      const [, helpName, helpArgs] = cmd._helpCommandnameAndArgs.match(/([^ ]+) *(.*)/);\n      const helpCommand = cmd.createCommand(helpName)\n        .helpOption(false);\n      helpCommand.description(cmd._helpCommandDescription);\n      if (helpArgs) helpCommand.arguments(helpArgs);\n      visibleCommands.push(helpCommand);\n    }\n    if (this.sortSubcommands) {\n      visibleCommands.sort((a, b) => {\n        // @ts-ignore: overloaded return type\n        return a.name().localeCompare(b.name());\n      });\n    }\n    return visibleCommands;\n  }\n\n  /**\n   * Compare options for sort.\n   *\n   * @param {Option} a\n   * @param {Option} b\n   * @returns number\n   */\n  compareOptions(a, b) {\n    const getSortKey = (option) => {\n      // WYSIWYG for order displayed in help. Short used for comparison if present. No special handling for negated.\n      return option.short ? option.short.replace(/^-/, '') : option.long.replace(/^--/, '');\n    };\n    return getSortKey(a).localeCompare(getSortKey(b));\n  }\n\n  /**\n   * Get an array of the visible options. Includes a placeholder for the implicit help option, if there is one.\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleOptions(cmd) {\n    const visibleOptions = cmd.options.filter((option) => !option.hidden);\n    // Implicit help\n    const showShortHelpFlag = cmd._hasHelpOption && cmd._helpShortFlag && !cmd._findOption(cmd._helpShortFlag);\n    const showLongHelpFlag = cmd._hasHelpOption && !cmd._findOption(cmd._helpLongFlag);\n    if (showShortHelpFlag || showLongHelpFlag) {\n      let helpOption;\n      if (!showShortHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpLongFlag, cmd._helpDescription);\n      } else if (!showLongHelpFlag) {\n        helpOption = cmd.createOption(cmd._helpShortFlag, cmd._helpDescription);\n      } else {\n        helpOption = cmd.createOption(cmd._helpFlags, cmd._helpDescription);\n      }\n      visibleOptions.push(helpOption);\n    }\n    if (this.sortOptions) {\n      visibleOptions.sort(this.compareOptions);\n    }\n    return visibleOptions;\n  }\n\n  /**\n   * Get an array of the visible global options. (Not including help.)\n   *\n   * @param {Command} cmd\n   * @returns {Option[]}\n   */\n\n  visibleGlobalOptions(cmd) {\n    if (!this.showGlobalOptions) return [];\n\n    const globalOptions = [];\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      const visibleOptions = ancestorCmd.options.filter((option) => !option.hidden);\n      globalOptions.push(...visibleOptions);\n    }\n    if (this.sortOptions) {\n      globalOptions.sort(this.compareOptions);\n    }\n    return globalOptions;\n  }\n\n  /**\n   * Get an array of the arguments if any have a description.\n   *\n   * @param {Command} cmd\n   * @returns {Argument[]}\n   */\n\n  visibleArguments(cmd) {\n    // Side effect! Apply the legacy descriptions before the arguments are displayed.\n    if (cmd._argsDescription) {\n      cmd.registeredArguments.forEach(argument => {\n        argument.description = argument.description || cmd._argsDescription[argument.name()] || '';\n      });\n    }\n\n    // If there are any arguments with a description then return all the arguments.\n    if (cmd.registeredArguments.find(argument => argument.description)) {\n      return cmd.registeredArguments;\n    }\n    return [];\n  }\n\n  /**\n   * Get the command term to show in the list of subcommands.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandTerm(cmd) {\n    // Legacy. Ignores custom usage string, and nested commands.\n    const args = cmd.registeredArguments.map(arg => humanReadableArgName(arg)).join(' ');\n    return cmd._name +\n      (cmd._aliases[0] ? '|' + cmd._aliases[0] : '') +\n      (cmd.options.length ? ' [options]' : '') + // simplistic check for non-help option\n      (args ? ' ' + args : '');\n  }\n\n  /**\n   * Get the option term to show in the list of options.\n   *\n   * @param {Option} option\n   * @returns {string}\n   */\n\n  optionTerm(option) {\n    return option.flags;\n  }\n\n  /**\n   * Get the argument term to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @returns {string}\n   */\n\n  argumentTerm(argument) {\n    return argument.name();\n  }\n\n  /**\n   * Get the longest command term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestSubcommandTermLength(cmd, helper) {\n    return helper.visibleCommands(cmd).reduce((max, command) => {\n      return Math.max(max, helper.subcommandTerm(command).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestOptionTermLength(cmd, helper) {\n    return helper.visibleOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest global option term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestGlobalOptionTermLength(cmd, helper) {\n    return helper.visibleGlobalOptions(cmd).reduce((max, option) => {\n      return Math.max(max, helper.optionTerm(option).length);\n    }, 0);\n  }\n\n  /**\n   * Get the longest argument term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  longestArgumentTermLength(cmd, helper) {\n    return helper.visibleArguments(cmd).reduce((max, argument) => {\n      return Math.max(max, helper.argumentTerm(argument).length);\n    }, 0);\n  }\n\n  /**\n   * Get the command usage to be displayed at the top of the built-in help.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandUsage(cmd) {\n    // Usage\n    let cmdName = cmd._name;\n    if (cmd._aliases[0]) {\n      cmdName = cmdName + '|' + cmd._aliases[0];\n    }\n    let ancestorCmdNames = '';\n    for (let ancestorCmd = cmd.parent; ancestorCmd; ancestorCmd = ancestorCmd.parent) {\n      ancestorCmdNames = ancestorCmd.name() + ' ' + ancestorCmdNames;\n    }\n    return ancestorCmdNames + cmdName + ' ' + cmd.usage();\n  }\n\n  /**\n   * Get the description for the command.\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  commandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.description();\n  }\n\n  /**\n   * Get the subcommand summary to show in the list of subcommands.\n   * (Fallback to description for backwards compatibility.)\n   *\n   * @param {Command} cmd\n   * @returns {string}\n   */\n\n  subcommandDescription(cmd) {\n    // @ts-ignore: overloaded return type\n    return cmd.summary() || cmd.description();\n  }\n\n  /**\n   * Get the option description to show in the list of options.\n   *\n   * @param {Option} option\n   * @return {string}\n   */\n\n  optionDescription(option) {\n    const extraInfo = [];\n\n    if (option.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${option.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (option.defaultValue !== undefined) {\n      // default for boolean and negated more for programmer than end user,\n      // but show true/false for boolean option as may be for hand-rolled env or config processing.\n      const showDefault = option.required || option.optional ||\n        (option.isBoolean() && typeof option.defaultValue === 'boolean');\n      if (showDefault) {\n        extraInfo.push(`default: ${option.defaultValueDescription || JSON.stringify(option.defaultValue)}`);\n      }\n    }\n    // preset for boolean and negated are more for programmer than end user\n    if (option.presetArg !== undefined && option.optional) {\n      extraInfo.push(`preset: ${JSON.stringify(option.presetArg)}`);\n    }\n    if (option.envVar !== undefined) {\n      extraInfo.push(`env: ${option.envVar}`);\n    }\n    if (extraInfo.length > 0) {\n      return `${option.description} (${extraInfo.join(', ')})`;\n    }\n\n    return option.description;\n  }\n\n  /**\n   * Get the argument description to show in the list of arguments.\n   *\n   * @param {Argument} argument\n   * @return {string}\n   */\n\n  argumentDescription(argument) {\n    const extraInfo = [];\n    if (argument.argChoices) {\n      extraInfo.push(\n        // use stringify to match the display of the default value\n        `choices: ${argument.argChoices.map((choice) => JSON.stringify(choice)).join(', ')}`);\n    }\n    if (argument.defaultValue !== undefined) {\n      extraInfo.push(`default: ${argument.defaultValueDescription || JSON.stringify(argument.defaultValue)}`);\n    }\n    if (extraInfo.length > 0) {\n      const extraDescripton = `(${extraInfo.join(', ')})`;\n      if (argument.description) {\n        return `${argument.description} ${extraDescripton}`;\n      }\n      return extraDescripton;\n    }\n    return argument.description;\n  }\n\n  /**\n   * Generate the built-in help text.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {string}\n   */\n\n  formatHelp(cmd, helper) {\n    const termWidth = helper.padWidth(cmd, helper);\n    const helpWidth = helper.helpWidth || 80;\n    const itemIndentWidth = 2;\n    const itemSeparatorWidth = 2; // between term and description\n    function formatItem(term, description) {\n      if (description) {\n        const fullText = `${term.padEnd(termWidth + itemSeparatorWidth)}${description}`;\n        return helper.wrap(fullText, helpWidth - itemIndentWidth, termWidth + itemSeparatorWidth);\n      }\n      return term;\n    }\n    function formatList(textArray) {\n      return textArray.join('\\n').replace(/^/gm, ' '.repeat(itemIndentWidth));\n    }\n\n    // Usage\n    let output = [`Usage: ${helper.commandUsage(cmd)}`, ''];\n\n    // Description\n    const commandDescription = helper.commandDescription(cmd);\n    if (commandDescription.length > 0) {\n      output = output.concat([helper.wrap(commandDescription, helpWidth, 0), '']);\n    }\n\n    // Arguments\n    const argumentList = helper.visibleArguments(cmd).map((argument) => {\n      return formatItem(helper.argumentTerm(argument), helper.argumentDescription(argument));\n    });\n    if (argumentList.length > 0) {\n      output = output.concat(['Arguments:', formatList(argumentList), '']);\n    }\n\n    // Options\n    const optionList = helper.visibleOptions(cmd).map((option) => {\n      return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n    });\n    if (optionList.length > 0) {\n      output = output.concat(['Options:', formatList(optionList), '']);\n    }\n\n    if (this.showGlobalOptions) {\n      const globalOptionList = helper.visibleGlobalOptions(cmd).map((option) => {\n        return formatItem(helper.optionTerm(option), helper.optionDescription(option));\n      });\n      if (globalOptionList.length > 0) {\n        output = output.concat(['Global Options:', formatList(globalOptionList), '']);\n      }\n    }\n\n    // Commands\n    const commandList = helper.visibleCommands(cmd).map((cmd) => {\n      return formatItem(helper.subcommandTerm(cmd), helper.subcommandDescription(cmd));\n    });\n    if (commandList.length > 0) {\n      output = output.concat(['Commands:', formatList(commandList), '']);\n    }\n\n    return output.join('\\n');\n  }\n\n  /**\n   * Calculate the pad width from the maximum term length.\n   *\n   * @param {Command} cmd\n   * @param {Help} helper\n   * @returns {number}\n   */\n\n  padWidth(cmd, helper) {\n    return Math.max(\n      helper.longestOptionTermLength(cmd, helper),\n      helper.longestGlobalOptionTermLength(cmd, helper),\n      helper.longestSubcommandTermLength(cmd, helper),\n      helper.longestArgumentTermLength(cmd, helper)\n    );\n  }\n\n  /**\n   * Wrap the given string to width characters per line, with lines after the first indented.\n   * Do not wrap if insufficient room for wrapping (minColumnWidth), or string is manually formatted.\n   *\n   * @param {string} str\n   * @param {number} width\n   * @param {number} indent\n   * @param {number} [minColumnWidth=40]\n   * @return {string}\n   *\n   */\n\n  wrap(str, width, indent, minColumnWidth = 40) {\n    // Full \\s characters, minus the linefeeds.\n    const indents = ' \\\\f\\\\t\\\\v\\u00a0\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff';\n    // Detect manually wrapped and indented strings by searching for line break followed by spaces.\n    const manualIndent = new RegExp(`[\\\\n][${indents}]+`);\n    if (str.match(manualIndent)) return str;\n    // Do not wrap if not enough room for a wrapped column of text (as could end up with a word per line).\n    const columnWidth = width - indent;\n    if (columnWidth < minColumnWidth) return str;\n\n    const leadingStr = str.slice(0, indent);\n    const columnText = str.slice(indent).replace('\\r\\n', '\\n');\n    const indentString = ' '.repeat(indent);\n    const zeroWidthSpace = '\\u200B';\n    const breaks = `\\\\s${zeroWidthSpace}`;\n    // Match line end (so empty lines don't collapse),\n    // or as much text as will fit in column, or excess text up to first break.\n    const regex = new RegExp(`\\n|.{1,${columnWidth - 1}}([${breaks}]|$)|[^${breaks}]+?([${breaks}]|$)`, 'g');\n    const lines = columnText.match(regex) || [];\n    return leadingStr + lines.map((line, i) => {\n      if (line === '\\n') return ''; // preserve empty lines\n      return ((i > 0) ? indentString : '') + line.trimEnd();\n    }).join('\\n');\n  }\n}\n\nexports.Help = Help;\n","const { InvalidArgumentError } = require('./error.js');\n\nclass Option {\n  /**\n   * Initialize a new `Option` with the given `flags` and `description`.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   */\n\n  constructor(flags, description) {\n    this.flags = flags;\n    this.description = description || '';\n\n    this.required = flags.includes('<'); // A value must be supplied when the option is specified.\n    this.optional = flags.includes('['); // A value is optional when the option is specified.\n    // variadic test ignores <value,...> et al which might be used to describe custom splitting of single argument\n    this.variadic = /\\w\\.\\.\\.[>\\]]$/.test(flags); // The option can take multiple values.\n    this.mandatory = false; // The option must have a value after parsing, which usually means it must be specified on command line.\n    const optionFlags = splitOptionFlags(flags);\n    this.short = optionFlags.shortFlag;\n    this.long = optionFlags.longFlag;\n    this.negate = false;\n    if (this.long) {\n      this.negate = this.long.startsWith('--no-');\n    }\n    this.defaultValue = undefined;\n    this.defaultValueDescription = undefined;\n    this.presetArg = undefined;\n    this.envVar = undefined;\n    this.parseArg = undefined;\n    this.hidden = false;\n    this.argChoices = undefined;\n    this.conflictsWith = [];\n    this.implied = undefined;\n  }\n\n  /**\n   * Set the default value, and optionally supply the description to be displayed in the help.\n   *\n   * @param {*} value\n   * @param {string} [description]\n   * @return {Option}\n   */\n\n  default(value, description) {\n    this.defaultValue = value;\n    this.defaultValueDescription = description;\n    return this;\n  }\n\n  /**\n   * Preset to use when option used without option-argument, especially optional but also boolean and negated.\n   * The custom processing (parseArg) is called.\n   *\n   * @example\n   * new Option('--color').default('GREYSCALE').preset('RGB');\n   * new Option('--donate [amount]').preset('20').argParser(parseFloat);\n   *\n   * @param {*} arg\n   * @return {Option}\n   */\n\n  preset(arg) {\n    this.presetArg = arg;\n    return this;\n  }\n\n  /**\n   * Add option name(s) that conflict with this option.\n   * An error will be displayed if conflicting options are found during parsing.\n   *\n   * @example\n   * new Option('--rgb').conflicts('cmyk');\n   * new Option('--js').conflicts(['ts', 'jsx']);\n   *\n   * @param {string | string[]} names\n   * @return {Option}\n   */\n\n  conflicts(names) {\n    this.conflictsWith = this.conflictsWith.concat(names);\n    return this;\n  }\n\n  /**\n   * Specify implied option values for when this option is set and the implied options are not.\n   *\n   * The custom processing (parseArg) is not called on the implied values.\n   *\n   * @example\n   * program\n   *   .addOption(new Option('--log', 'write logging information to file'))\n   *   .addOption(new Option('--trace', 'log extra details').implies({ log: 'trace.txt' }));\n   *\n   * @param {Object} impliedOptionValues\n   * @return {Option}\n   */\n  implies(impliedOptionValues) {\n    let newImplied = impliedOptionValues;\n    if (typeof impliedOptionValues === 'string') {\n      // string is not documented, but easy mistake and we can do what user probably intended.\n      newImplied = { [impliedOptionValues]: true };\n    }\n    this.implied = Object.assign(this.implied || {}, newImplied);\n    return this;\n  }\n\n  /**\n   * Set environment variable to check for option value.\n   *\n   * An environment variable is only used if when processed the current option value is\n   * undefined, or the source of the current value is 'default' or 'config' or 'env'.\n   *\n   * @param {string} name\n   * @return {Option}\n   */\n\n  env(name) {\n    this.envVar = name;\n    return this;\n  }\n\n  /**\n   * Set the custom handler for processing CLI option arguments into option values.\n   *\n   * @param {Function} [fn]\n   * @return {Option}\n   */\n\n  argParser(fn) {\n    this.parseArg = fn;\n    return this;\n  }\n\n  /**\n   * Whether the option is mandatory and must have a value after parsing.\n   *\n   * @param {boolean} [mandatory=true]\n   * @return {Option}\n   */\n\n  makeOptionMandatory(mandatory = true) {\n    this.mandatory = !!mandatory;\n    return this;\n  }\n\n  /**\n   * Hide option in help.\n   *\n   * @param {boolean} [hide=true]\n   * @return {Option}\n   */\n\n  hideHelp(hide = true) {\n    this.hidden = !!hide;\n    return this;\n  }\n\n  /**\n   * @api private\n   */\n\n  _concatValue(value, previous) {\n    if (previous === this.defaultValue || !Array.isArray(previous)) {\n      return [value];\n    }\n\n    return previous.concat(value);\n  }\n\n  /**\n   * Only allow option value to be one of choices.\n   *\n   * @param {string[]} values\n   * @return {Option}\n   */\n\n  choices(values) {\n    this.argChoices = values.slice();\n    this.parseArg = (arg, previous) => {\n      if (!this.argChoices.includes(arg)) {\n        throw new InvalidArgumentError(`Allowed choices are ${this.argChoices.join(', ')}.`);\n      }\n      if (this.variadic) {\n        return this._concatValue(arg, previous);\n      }\n      return arg;\n    };\n    return this;\n  }\n\n  /**\n   * Return option name.\n   *\n   * @return {string}\n   */\n\n  name() {\n    if (this.long) {\n      return this.long.replace(/^--/, '');\n    }\n    return this.short.replace(/^-/, '');\n  }\n\n  /**\n   * Return option name, in a camelcase format that can be used\n   * as a object attribute key.\n   *\n   * @return {string}\n   * @api private\n   */\n\n  attributeName() {\n    return camelcase(this.name().replace(/^no-/, ''));\n  }\n\n  /**\n   * Check if `arg` matches the short or long flag.\n   *\n   * @param {string} arg\n   * @return {boolean}\n   * @api private\n   */\n\n  is(arg) {\n    return this.short === arg || this.long === arg;\n  }\n\n  /**\n   * Return whether a boolean option.\n   *\n   * Options are one of boolean, negated, required argument, or optional argument.\n   *\n   * @return {boolean}\n   * @api private\n   */\n\n  isBoolean() {\n    return !this.required && !this.optional && !this.negate;\n  }\n}\n\n/**\n * This class is to make it easier to work with dual options, without changing the existing\n * implementation. We support separate dual options for separate positive and negative options,\n * like `--build` and `--no-build`, which share a single option value. This works nicely for some\n * use cases, but is tricky for others where we want separate behaviours despite\n * the single shared option value.\n */\nclass DualOptions {\n  /**\n   * @param {Option[]} options\n   */\n  constructor(options) {\n    this.positiveOptions = new Map();\n    this.negativeOptions = new Map();\n    this.dualOptions = new Set();\n    options.forEach(option => {\n      if (option.negate) {\n        this.negativeOptions.set(option.attributeName(), option);\n      } else {\n        this.positiveOptions.set(option.attributeName(), option);\n      }\n    });\n    this.negativeOptions.forEach((value, key) => {\n      if (this.positiveOptions.has(key)) {\n        this.dualOptions.add(key);\n      }\n    });\n  }\n\n  /**\n   * Did the value come from the option, and not from possible matching dual option?\n   *\n   * @param {*} value\n   * @param {Option} option\n   * @returns {boolean}\n   */\n  valueFromOption(value, option) {\n    const optionKey = option.attributeName();\n    if (!this.dualOptions.has(optionKey)) return true;\n\n    // Use the value to deduce if (probably) came from the option.\n    const preset = this.negativeOptions.get(optionKey).presetArg;\n    const negativeValue = (preset !== undefined) ? preset : false;\n    return option.negate === (negativeValue === value);\n  }\n}\n\n/**\n * Convert string from kebab-case to camelCase.\n *\n * @param {string} str\n * @return {string}\n * @api private\n */\n\nfunction camelcase(str) {\n  return str.split('-').reduce((str, word) => {\n    return str + word[0].toUpperCase() + word.slice(1);\n  });\n}\n\n/**\n * Split the short and long flag out of something like '-m,--mixed <value>'\n *\n * @api private\n */\n\nfunction splitOptionFlags(flags) {\n  let shortFlag;\n  let longFlag;\n  // Use original very loose parsing to maintain backwards compatibility for now,\n  // which allowed for example unintended `-sw, --short-word` [sic].\n  const flagParts = flags.split(/[ |,]+/);\n  if (flagParts.length > 1 && !/^[[<]/.test(flagParts[1])) shortFlag = flagParts.shift();\n  longFlag = flagParts.shift();\n  // Add support for lone short flag without significantly changing parsing!\n  if (!shortFlag && /^-[^-]$/.test(longFlag)) {\n    shortFlag = longFlag;\n    longFlag = undefined;\n  }\n  return { shortFlag, longFlag };\n}\n\nexports.Option = Option;\nexports.splitOptionFlags = splitOptionFlags;\nexports.DualOptions = DualOptions;\n","const maxDistance = 3;\n\nfunction editDistance(a, b) {\n  // https://en.wikipedia.org/wiki/Damerau–Levenshtein_distance\n  // Calculating optimal string alignment distance, no substring is edited more than once.\n  // (Simple implementation.)\n\n  // Quick early exit, return worst case.\n  if (Math.abs(a.length - b.length) > maxDistance) return Math.max(a.length, b.length);\n\n  // distance between prefix substrings of a and b\n  const d = [];\n\n  // pure deletions turn a into empty string\n  for (let i = 0; i <= a.length; i++) {\n    d[i] = [i];\n  }\n  // pure insertions turn empty string into b\n  for (let j = 0; j <= b.length; j++) {\n    d[0][j] = j;\n  }\n\n  // fill matrix\n  for (let j = 1; j <= b.length; j++) {\n    for (let i = 1; i <= a.length; i++) {\n      let cost = 1;\n      if (a[i - 1] === b[j - 1]) {\n        cost = 0;\n      } else {\n        cost = 1;\n      }\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost // substitution\n      );\n      // transposition\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n      }\n    }\n  }\n\n  return d[a.length][b.length];\n}\n\n/**\n * Find close matches, restricted to same number of edits.\n *\n * @param {string} word\n * @param {string[]} candidates\n * @returns {string}\n */\n\nfunction suggestSimilar(word, candidates) {\n  if (!candidates || candidates.length === 0) return '';\n  // remove possible duplicates\n  candidates = Array.from(new Set(candidates));\n\n  const searchingOptions = word.startsWith('--');\n  if (searchingOptions) {\n    word = word.slice(2);\n    candidates = candidates.map(candidate => candidate.slice(2));\n  }\n\n  let similar = [];\n  let bestDistance = maxDistance;\n  const minSimilarity = 0.4;\n  candidates.forEach((candidate) => {\n    if (candidate.length <= 1) return; // no one character guesses\n\n    const distance = editDistance(word, candidate);\n    const length = Math.max(word.length, candidate.length);\n    const similarity = (length - distance) / length;\n    if (similarity > minSimilarity) {\n      if (distance < bestDistance) {\n        // better edit distance, throw away previous worse matches\n        bestDistance = distance;\n        similar = [candidate];\n      } else if (distance === bestDistance) {\n        similar.push(candidate);\n      }\n    }\n  });\n\n  similar.sort((a, b) => a.localeCompare(b));\n  if (searchingOptions) {\n    similar = similar.map(candidate => `--${candidate}`);\n  }\n\n  if (similar.length > 1) {\n    return `\\n(Did you mean one of ${similar.join(', ')}?)`;\n  }\n  if (similar.length === 1) {\n    return `\\n(Did you mean ${similar[0]}?)`;\n  }\n  return '';\n}\n\nexports.suggestSimilar = suggestSimilar;\n","const EventEmitter = require('events').EventEmitter;\nconst childProcess = require('child_process');\nconst path = require('path');\nconst fs = require('fs');\nconst process = require('process');\n\nconst { Argument, humanReadableArgName } = require('./argument.js');\nconst { CommanderError } = require('./error.js');\nconst { Help } = require('./help.js');\nconst { Option, splitOptionFlags, DualOptions } = require('./option.js');\nconst { suggestSimilar } = require('./suggestSimilar');\n\nclass Command extends EventEmitter {\n  /**\n   * Initialize a new `Command`.\n   *\n   * @param {string} [name]\n   */\n\n  constructor(name) {\n    super();\n    /** @type {Command[]} */\n    this.commands = [];\n    /** @type {Option[]} */\n    this.options = [];\n    this.parent = null;\n    this._allowUnknownOption = false;\n    this._allowExcessArguments = true;\n    /** @type {Argument[]} */\n    this.registeredArguments = [];\n    this._args = this.registeredArguments; // deprecated old name\n    /** @type {string[]} */\n    this.args = []; // cli args with options removed\n    this.rawArgs = [];\n    this.processedArgs = []; // like .args but after custom processing and collecting variadic\n    this._scriptPath = null;\n    this._name = name || '';\n    this._optionValues = {};\n    this._optionValueSources = {}; // default, env, cli etc\n    this._storeOptionsAsProperties = false;\n    this._actionHandler = null;\n    this._executableHandler = false;\n    this._executableFile = null; // custom name for executable\n    this._executableDir = null; // custom search directory for subcommands\n    this._defaultCommandName = null;\n    this._exitCallback = null;\n    this._aliases = [];\n    this._combineFlagAndOptionalValue = true;\n    this._description = '';\n    this._summary = '';\n    this._argsDescription = undefined; // legacy\n    this._enablePositionalOptions = false;\n    this._passThroughOptions = false;\n    this._lifeCycleHooks = {}; // a hash of arrays\n    /** @type {boolean | string} */\n    this._showHelpAfterError = false;\n    this._showSuggestionAfterError = true;\n\n    // see .configureOutput() for docs\n    this._outputConfiguration = {\n      writeOut: (str) => process.stdout.write(str),\n      writeErr: (str) => process.stderr.write(str),\n      getOutHelpWidth: () => process.stdout.isTTY ? process.stdout.columns : undefined,\n      getErrHelpWidth: () => process.stderr.isTTY ? process.stderr.columns : undefined,\n      outputError: (str, write) => write(str)\n    };\n\n    this._hidden = false;\n    this._hasHelpOption = true;\n    this._helpFlags = '-h, --help';\n    this._helpDescription = 'display help for command';\n    this._helpShortFlag = '-h';\n    this._helpLongFlag = '--help';\n    this._addImplicitHelpCommand = undefined; // Deliberately undefined, not decided whether true or false\n    this._helpCommandName = 'help';\n    this._helpCommandnameAndArgs = 'help [command]';\n    this._helpCommandDescription = 'display help for command';\n    this._helpConfiguration = {};\n  }\n\n  /**\n   * Copy settings that are useful to have in common across root command and subcommands.\n   *\n   * (Used internally when adding a command using `.command()` so subcommands inherit parent settings.)\n   *\n   * @param {Command} sourceCommand\n   * @return {Command} `this` command for chaining\n   */\n  copyInheritedSettings(sourceCommand) {\n    this._outputConfiguration = sourceCommand._outputConfiguration;\n    this._hasHelpOption = sourceCommand._hasHelpOption;\n    this._helpFlags = sourceCommand._helpFlags;\n    this._helpDescription = sourceCommand._helpDescription;\n    this._helpShortFlag = sourceCommand._helpShortFlag;\n    this._helpLongFlag = sourceCommand._helpLongFlag;\n    this._helpCommandName = sourceCommand._helpCommandName;\n    this._helpCommandnameAndArgs = sourceCommand._helpCommandnameAndArgs;\n    this._helpCommandDescription = sourceCommand._helpCommandDescription;\n    this._helpConfiguration = sourceCommand._helpConfiguration;\n    this._exitCallback = sourceCommand._exitCallback;\n    this._storeOptionsAsProperties = sourceCommand._storeOptionsAsProperties;\n    this._combineFlagAndOptionalValue = sourceCommand._combineFlagAndOptionalValue;\n    this._allowExcessArguments = sourceCommand._allowExcessArguments;\n    this._enablePositionalOptions = sourceCommand._enablePositionalOptions;\n    this._showHelpAfterError = sourceCommand._showHelpAfterError;\n    this._showSuggestionAfterError = sourceCommand._showSuggestionAfterError;\n\n    return this;\n  }\n\n  /**\n   * @returns {Command[]}\n   * @api private\n   */\n\n  _getCommandAndAncestors() {\n    const result = [];\n    for (let command = this; command; command = command.parent) {\n      result.push(command);\n    }\n    return result;\n  }\n\n  /**\n   * Define a command.\n   *\n   * There are two styles of command: pay attention to where to put the description.\n   *\n   * @example\n   * // Command implemented using action handler (description is supplied separately to `.command`)\n   * program\n   *   .command('clone <source> [destination]')\n   *   .description('clone a repository into a newly created directory')\n   *   .action((source, destination) => {\n   *     console.log('clone command called');\n   *   });\n   *\n   * // Command implemented using separate executable file (description is second parameter to `.command`)\n   * program\n   *   .command('start <service>', 'start named service')\n   *   .command('stop [service]', 'stop named service, or all if no name supplied');\n   *\n   * @param {string} nameAndArgs - command name and arguments, args are `<required>` or `[optional]` and last may also be `variadic...`\n   * @param {Object|string} [actionOptsOrExecDesc] - configuration options (for action), or description (for executable)\n   * @param {Object} [execOpts] - configuration options (for executable)\n   * @return {Command} returns new command for action handler, or `this` for executable command\n   */\n\n  command(nameAndArgs, actionOptsOrExecDesc, execOpts) {\n    let desc = actionOptsOrExecDesc;\n    let opts = execOpts;\n    if (typeof desc === 'object' && desc !== null) {\n      opts = desc;\n      desc = null;\n    }\n    opts = opts || {};\n    const [, name, args] = nameAndArgs.match(/([^ ]+) *(.*)/);\n\n    const cmd = this.createCommand(name);\n    if (desc) {\n      cmd.description(desc);\n      cmd._executableHandler = true;\n    }\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    cmd._hidden = !!(opts.noHelp || opts.hidden); // noHelp is deprecated old name for hidden\n    cmd._executableFile = opts.executableFile || null; // Custom name for executable file, set missing to null to match constructor\n    if (args) cmd.arguments(args);\n    this.commands.push(cmd);\n    cmd.parent = this;\n    cmd.copyInheritedSettings(this);\n\n    if (desc) return this;\n    return cmd;\n  }\n\n  /**\n   * Factory routine to create a new unattached command.\n   *\n   * See .command() for creating an attached subcommand, which uses this routine to\n   * create the command. You can override createCommand to customise subcommands.\n   *\n   * @param {string} [name]\n   * @return {Command} new command\n   */\n\n  createCommand(name) {\n    return new Command(name);\n  }\n\n  /**\n   * You can customise the help with a subclass of Help by overriding createHelp,\n   * or by overriding Help properties using configureHelp().\n   *\n   * @return {Help}\n   */\n\n  createHelp() {\n    return Object.assign(new Help(), this.configureHelp());\n  }\n\n  /**\n   * You can customise the help by overriding Help properties using configureHelp(),\n   * or with a subclass of Help by overriding createHelp().\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureHelp(configuration) {\n    if (configuration === undefined) return this._helpConfiguration;\n\n    this._helpConfiguration = configuration;\n    return this;\n  }\n\n  /**\n   * The default output goes to stdout and stderr. You can customise this for special\n   * applications. You can also customise the display of errors by overriding outputError.\n   *\n   * The configuration properties are all functions:\n   *\n   *     // functions to change where being written, stdout and stderr\n   *     writeOut(str)\n   *     writeErr(str)\n   *     // matching functions to specify width for wrapping help\n   *     getOutHelpWidth()\n   *     getErrHelpWidth()\n   *     // functions based on what is being written out\n   *     outputError(str, write) // used for displaying errors, and not used for displaying help\n   *\n   * @param {Object} [configuration] - configuration options\n   * @return {Command|Object} `this` command for chaining, or stored configuration\n   */\n\n  configureOutput(configuration) {\n    if (configuration === undefined) return this._outputConfiguration;\n\n    Object.assign(this._outputConfiguration, configuration);\n    return this;\n  }\n\n  /**\n   * Display the help or a custom message after an error occurs.\n   *\n   * @param {boolean|string} [displayHelp]\n   * @return {Command} `this` command for chaining\n   */\n  showHelpAfterError(displayHelp = true) {\n    if (typeof displayHelp !== 'string') displayHelp = !!displayHelp;\n    this._showHelpAfterError = displayHelp;\n    return this;\n  }\n\n  /**\n   * Display suggestion of similar commands for unknown commands, or options for unknown options.\n   *\n   * @param {boolean} [displaySuggestion]\n   * @return {Command} `this` command for chaining\n   */\n  showSuggestionAfterError(displaySuggestion = true) {\n    this._showSuggestionAfterError = !!displaySuggestion;\n    return this;\n  }\n\n  /**\n   * Add a prepared subcommand.\n   *\n   * See .command() for creating an attached subcommand which inherits settings from its parent.\n   *\n   * @param {Command} cmd - new subcommand\n   * @param {Object} [opts] - configuration options\n   * @return {Command} `this` command for chaining\n   */\n\n  addCommand(cmd, opts) {\n    if (!cmd._name) {\n      throw new Error(`Command passed to .addCommand() must have a name\n- specify the name in Command constructor or using .name()`);\n    }\n\n    opts = opts || {};\n    if (opts.isDefault) this._defaultCommandName = cmd._name;\n    if (opts.noHelp || opts.hidden) cmd._hidden = true; // modifying passed command due to existing implementation\n\n    this.commands.push(cmd);\n    cmd.parent = this;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached argument.\n   *\n   * See .argument() for creating an attached argument, which uses this routine to\n   * create the argument. You can override createArgument to return a custom argument.\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @return {Argument} new argument\n   */\n\n  createArgument(name, description) {\n    return new Argument(name, description);\n  }\n\n  /**\n   * Define argument syntax for command.\n   *\n   * The default is that the argument is required, and you can explicitly\n   * indicate this with <> around the name. Put [] around the name for an optional argument.\n   *\n   * @example\n   * program.argument('<input-file>');\n   * program.argument('[output-file]');\n   *\n   * @param {string} name\n   * @param {string} [description]\n   * @param {Function|*} [fn] - custom argument processing function\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n  argument(name, description, fn, defaultValue) {\n    const argument = this.createArgument(name, description);\n    if (typeof fn === 'function') {\n      argument.default(defaultValue).argParser(fn);\n    } else {\n      argument.default(fn);\n    }\n    this.addArgument(argument);\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding multiple at once (without descriptions).\n   *\n   * See also .argument().\n   *\n   * @example\n   * program.arguments('<cmd> [env]');\n   *\n   * @param {string} names\n   * @return {Command} `this` command for chaining\n   */\n\n  arguments(names) {\n    names.trim().split(/ +/).forEach((detail) => {\n      this.argument(detail);\n    });\n    return this;\n  }\n\n  /**\n   * Define argument syntax for command, adding a prepared argument.\n   *\n   * @param {Argument} argument\n   * @return {Command} `this` command for chaining\n   */\n  addArgument(argument) {\n    const previousArgument = this.registeredArguments.slice(-1)[0];\n    if (previousArgument && previousArgument.variadic) {\n      throw new Error(`only the last argument can be variadic '${previousArgument.name()}'`);\n    }\n    if (argument.required && argument.defaultValue !== undefined && argument.parseArg === undefined) {\n      throw new Error(`a default value for a required argument is never used: '${argument.name()}'`);\n    }\n    this.registeredArguments.push(argument);\n    return this;\n  }\n\n  /**\n   * Override default decision whether to add implicit help command.\n   *\n   *    addHelpCommand() // force on\n   *    addHelpCommand(false); // force off\n   *    addHelpCommand('help [cmd]', 'display help for [cmd]'); // force on with custom details\n   *\n   * @return {Command} `this` command for chaining\n   */\n\n  addHelpCommand(enableOrNameAndArgs, description) {\n    if (enableOrNameAndArgs === false) {\n      this._addImplicitHelpCommand = false;\n    } else {\n      this._addImplicitHelpCommand = true;\n      if (typeof enableOrNameAndArgs === 'string') {\n        this._helpCommandName = enableOrNameAndArgs.split(' ')[0];\n        this._helpCommandnameAndArgs = enableOrNameAndArgs;\n      }\n      this._helpCommandDescription = description || this._helpCommandDescription;\n    }\n    return this;\n  }\n\n  /**\n   * @return {boolean}\n   * @api private\n   */\n\n  _hasImplicitHelpCommand() {\n    if (this._addImplicitHelpCommand === undefined) {\n      return this.commands.length && !this._actionHandler && !this._findCommand('help');\n    }\n    return this._addImplicitHelpCommand;\n  }\n\n  /**\n   * Add hook for life cycle event.\n   *\n   * @param {string} event\n   * @param {Function} listener\n   * @return {Command} `this` command for chaining\n   */\n\n  hook(event, listener) {\n    const allowedValues = ['preSubcommand', 'preAction', 'postAction'];\n    if (!allowedValues.includes(event)) {\n      throw new Error(`Unexpected value for event passed to hook : '${event}'.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    if (this._lifeCycleHooks[event]) {\n      this._lifeCycleHooks[event].push(listener);\n    } else {\n      this._lifeCycleHooks[event] = [listener];\n    }\n    return this;\n  }\n\n  /**\n   * Register callback to use as replacement for calling process.exit.\n   *\n   * @param {Function} [fn] optional callback which will be passed a CommanderError, defaults to throwing\n   * @return {Command} `this` command for chaining\n   */\n\n  exitOverride(fn) {\n    if (fn) {\n      this._exitCallback = fn;\n    } else {\n      this._exitCallback = (err) => {\n        if (err.code !== 'commander.executeSubCommandAsync') {\n          throw err;\n        } else {\n          // Async callback from spawn events, not useful to throw.\n        }\n      };\n    }\n    return this;\n  }\n\n  /**\n   * Call process.exit, and _exitCallback if defined.\n   *\n   * @param {number} exitCode exit code for using with process.exit\n   * @param {string} code an id string representing the error\n   * @param {string} message human-readable description of the error\n   * @return never\n   * @api private\n   */\n\n  _exit(exitCode, code, message) {\n    if (this._exitCallback) {\n      this._exitCallback(new CommanderError(exitCode, code, message));\n      // Expecting this line is not reached.\n    }\n    process.exit(exitCode);\n  }\n\n  /**\n   * Register callback `fn` for the command.\n   *\n   * @example\n   * program\n   *   .command('serve')\n   *   .description('start service')\n   *   .action(function() {\n   *      // do work here\n   *   });\n   *\n   * @param {Function} fn\n   * @return {Command} `this` command for chaining\n   */\n\n  action(fn) {\n    const listener = (args) => {\n      // The .action callback takes an extra parameter which is the command or options.\n      const expectedArgsCount = this.registeredArguments.length;\n      const actionArgs = args.slice(0, expectedArgsCount);\n      if (this._storeOptionsAsProperties) {\n        actionArgs[expectedArgsCount] = this; // backwards compatible \"options\"\n      } else {\n        actionArgs[expectedArgsCount] = this.opts();\n      }\n      actionArgs.push(this);\n\n      return fn.apply(this, actionArgs);\n    };\n    this._actionHandler = listener;\n    return this;\n  }\n\n  /**\n   * Factory routine to create a new unattached option.\n   *\n   * See .option() for creating an attached option, which uses this routine to\n   * create the option. You can override createOption to return a custom option.\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @return {Option} new option\n   */\n\n  createOption(flags, description) {\n    return new Option(flags, description);\n  }\n\n  /**\n   * Wrap parseArgs to catch 'commander.invalidArgument'.\n   *\n   * @param {Option | Argument} target\n   * @param {string} value\n   * @param {*} previous\n   * @param {string} invalidArgumentMessage\n   * @api private\n   */\n\n  _callParseArg(target, value, previous, invalidArgumentMessage) {\n    try {\n      return target.parseArg(value, previous);\n    } catch (err) {\n      if (err.code === 'commander.invalidArgument') {\n        const message = `${invalidArgumentMessage} ${err.message}`;\n        this.error(message, { exitCode: err.exitCode, code: err.code });\n      }\n      throw err;\n    }\n  }\n\n  /**\n   * Add an option.\n   *\n   * @param {Option} option\n   * @return {Command} `this` command for chaining\n   */\n  addOption(option) {\n    const oname = option.name();\n    const name = option.attributeName();\n\n    // store default value\n    if (option.negate) {\n      // --no-foo is special and defaults foo to true, unless a --foo option is already defined\n      const positiveLongFlag = option.long.replace(/^--no-/, '--');\n      if (!this._findOption(positiveLongFlag)) {\n        this.setOptionValueWithSource(name, option.defaultValue === undefined ? true : option.defaultValue, 'default');\n      }\n    } else if (option.defaultValue !== undefined) {\n      this.setOptionValueWithSource(name, option.defaultValue, 'default');\n    }\n\n    // register the option\n    this.options.push(option);\n\n    // handler for cli and env supplied values\n    const handleOptionValue = (val, invalidValueMessage, valueSource) => {\n      // val is null for optional option used without an optional-argument.\n      // val is undefined for boolean and negated option.\n      if (val == null && option.presetArg !== undefined) {\n        val = option.presetArg;\n      }\n\n      // custom processing\n      const oldValue = this.getOptionValue(name);\n      if (val !== null && option.parseArg) {\n        val = this._callParseArg(option, val, oldValue, invalidValueMessage);\n      } else if (val !== null && option.variadic) {\n        val = option._concatValue(val, oldValue);\n      }\n\n      // Fill-in appropriate missing values. Long winded but easy to follow.\n      if (val == null) {\n        if (option.negate) {\n          val = false;\n        } else if (option.isBoolean() || option.optional) {\n          val = true;\n        } else {\n          val = ''; // not normal, parseArg might have failed or be a mock function for testing\n        }\n      }\n      this.setOptionValueWithSource(name, val, valueSource);\n    };\n\n    this.on('option:' + oname, (val) => {\n      const invalidValueMessage = `error: option '${option.flags}' argument '${val}' is invalid.`;\n      handleOptionValue(val, invalidValueMessage, 'cli');\n    });\n\n    if (option.envVar) {\n      this.on('optionEnv:' + oname, (val) => {\n        const invalidValueMessage = `error: option '${option.flags}' value '${val}' from env '${option.envVar}' is invalid.`;\n        handleOptionValue(val, invalidValueMessage, 'env');\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Internal implementation shared by .option() and .requiredOption()\n   *\n   * @api private\n   */\n  _optionEx(config, flags, description, fn, defaultValue) {\n    if (typeof flags === 'object' && flags instanceof Option) {\n      throw new Error('To add an Option object use addOption() instead of option() or requiredOption()');\n    }\n    const option = this.createOption(flags, description);\n    option.makeOptionMandatory(!!config.mandatory);\n    if (typeof fn === 'function') {\n      option.default(defaultValue).argParser(fn);\n    } else if (fn instanceof RegExp) {\n      // deprecated\n      const regex = fn;\n      fn = (val, def) => {\n        const m = regex.exec(val);\n        return m ? m[0] : def;\n      };\n      option.default(defaultValue).argParser(fn);\n    } else {\n      option.default(fn);\n    }\n\n    return this.addOption(option);\n  }\n\n  /**\n   * Define option with `flags`, `description`, and optional argument parsing function or `defaultValue` or both.\n   *\n   * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space. A required\n   * option-argument is indicated by `<>` and an optional option-argument by `[]`.\n   *\n   * See the README for more details, and see also addOption() and requiredOption().\n   *\n   * @example\n   * program\n   *     .option('-p, --pepper', 'add pepper')\n   *     .option('-p, --pizza-type <TYPE>', 'type of pizza') // required option-argument\n   *     .option('-c, --cheese [CHEESE]', 'add extra cheese', 'mozzarella') // optional option-argument with default\n   *     .option('-t, --tip <VALUE>', 'add tip to purchase cost', parseFloat) // custom parse function\n   *\n   * @param {string} flags\n   * @param {string} [description]\n   * @param {Function|*} [parseArg] - custom option processing function or default value\n   * @param {*} [defaultValue]\n   * @return {Command} `this` command for chaining\n   */\n\n  option(flags, description, parseArg, defaultValue) {\n    return this._optionEx({}, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n  * Add a required option which must have a value after parsing. This usually means\n  * the option must be specified on the command line. (Otherwise the same as .option().)\n  *\n  * The `flags` string contains the short and/or long flags, separated by comma, a pipe or space.\n  *\n  * @param {string} flags\n  * @param {string} [description]\n  * @param {Function|*} [parseArg] - custom option processing function or default value\n  * @param {*} [defaultValue]\n  * @return {Command} `this` command for chaining\n  */\n\n  requiredOption(flags, description, parseArg, defaultValue) {\n    return this._optionEx({ mandatory: true }, flags, description, parseArg, defaultValue);\n  }\n\n  /**\n   * Alter parsing of short flags with optional values.\n   *\n   * @example\n   * // for `.option('-f,--flag [value]'):\n   * program.combineFlagAndOptionalValue(true);  // `-f80` is treated like `--flag=80`, this is the default behaviour\n   * program.combineFlagAndOptionalValue(false) // `-fb` is treated like `-f -b`\n   *\n   * @param {Boolean} [combine=true] - if `true` or omitted, an optional value can be specified directly after the flag.\n   */\n  combineFlagAndOptionalValue(combine = true) {\n    this._combineFlagAndOptionalValue = !!combine;\n    return this;\n  }\n\n  /**\n   * Allow unknown options on the command line.\n   *\n   * @param {Boolean} [allowUnknown=true] - if `true` or omitted, no error will be thrown\n   * for unknown options.\n   */\n  allowUnknownOption(allowUnknown = true) {\n    this._allowUnknownOption = !!allowUnknown;\n    return this;\n  }\n\n  /**\n   * Allow excess command-arguments on the command line. Pass false to make excess arguments an error.\n   *\n   * @param {Boolean} [allowExcess=true] - if `true` or omitted, no error will be thrown\n   * for excess arguments.\n   */\n  allowExcessArguments(allowExcess = true) {\n    this._allowExcessArguments = !!allowExcess;\n    return this;\n  }\n\n  /**\n   * Enable positional options. Positional means global options are specified before subcommands which lets\n   * subcommands reuse the same option names, and also enables subcommands to turn on passThroughOptions.\n   * The default behaviour is non-positional and global options may appear anywhere on the command line.\n   *\n   * @param {Boolean} [positional=true]\n   */\n  enablePositionalOptions(positional = true) {\n    this._enablePositionalOptions = !!positional;\n    return this;\n  }\n\n  /**\n   * Pass through options that come after command-arguments rather than treat them as command-options,\n   * so actual command-options come before command-arguments. Turning this on for a subcommand requires\n   * positional options to have been enabled on the program (parent commands).\n   * The default behaviour is non-positional and options may appear before or after command-arguments.\n   *\n   * @param {Boolean} [passThrough=true]\n   * for unknown options.\n   */\n  passThroughOptions(passThrough = true) {\n    this._passThroughOptions = !!passThrough;\n    if (!!this.parent && passThrough && !this.parent._enablePositionalOptions) {\n      throw new Error('passThroughOptions can not be used without turning on enablePositionalOptions for parent command(s)');\n    }\n    return this;\n  }\n\n  /**\n    * Whether to store option values as properties on command object,\n    * or store separately (specify false). In both cases the option values can be accessed using .opts().\n    *\n    * @param {boolean} [storeAsProperties=true]\n    * @return {Command} `this` command for chaining\n    */\n\n  storeOptionsAsProperties(storeAsProperties = true) {\n    if (this.options.length) {\n      throw new Error('call .storeOptionsAsProperties() before adding options');\n    }\n    // if (Object.keys(this._optionValues).length) {\n    //   throw new Error('call .storeOptionsAsProperties() before setting option values');\n    // }\n    this._storeOptionsAsProperties = !!storeAsProperties;\n    return this;\n  }\n\n  /**\n   * Retrieve option value.\n   *\n   * @param {string} key\n   * @return {Object} value\n   */\n\n  getOptionValue(key) {\n    if (this._storeOptionsAsProperties) {\n      return this[key];\n    }\n    return this._optionValues[key];\n  }\n\n  /**\n   * Store option value.\n   *\n   * @param {string} key\n   * @param {Object} value\n   * @return {Command} `this` command for chaining\n   */\n\n  setOptionValue(key, value) {\n    return this.setOptionValueWithSource(key, value, undefined);\n  }\n\n  /**\n    * Store option value and where the value came from.\n    *\n    * @param {string} key\n    * @param {Object} value\n    * @param {string} source - expected values are default/config/env/cli/implied\n    * @return {Command} `this` command for chaining\n    */\n\n  setOptionValueWithSource(key, value, source) {\n    if (this._storeOptionsAsProperties) {\n      this[key] = value;\n    } else {\n      this._optionValues[key] = value;\n    }\n    this._optionValueSources[key] = source;\n    return this;\n  }\n\n  /**\n    * Get source of option value.\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSource(key) {\n    return this._optionValueSources[key];\n  }\n\n  /**\n    * Get source of option value. See also .optsWithGlobals().\n    * Expected values are default | config | env | cli | implied\n    *\n    * @param {string} key\n    * @return {string}\n    */\n\n  getOptionValueSourceWithGlobals(key) {\n    // global overwrites local, like optsWithGlobals\n    let source;\n    this._getCommandAndAncestors().forEach((cmd) => {\n      if (cmd.getOptionValueSource(key) !== undefined) {\n        source = cmd.getOptionValueSource(key);\n      }\n    });\n    return source;\n  }\n\n  /**\n   * Get user arguments from implied or explicit arguments.\n   * Side-effects: set _scriptPath if args included script. Used for default program name, and subcommand searches.\n   *\n   * @api private\n   */\n\n  _prepareUserArgs(argv, parseOptions) {\n    if (argv !== undefined && !Array.isArray(argv)) {\n      throw new Error('first parameter to parse must be array or undefined');\n    }\n    parseOptions = parseOptions || {};\n\n    // Default to using process.argv\n    if (argv === undefined) {\n      argv = process.argv;\n      // @ts-ignore: unknown property\n      if (process.versions && process.versions.electron) {\n        parseOptions.from = 'electron';\n      }\n    }\n    this.rawArgs = argv.slice();\n\n    // make it a little easier for callers by supporting various argv conventions\n    let userArgs;\n    switch (parseOptions.from) {\n      case undefined:\n      case 'node':\n        this._scriptPath = argv[1];\n        userArgs = argv.slice(2);\n        break;\n      case 'electron':\n        // @ts-ignore: unknown property\n        if (process.defaultApp) {\n          this._scriptPath = argv[1];\n          userArgs = argv.slice(2);\n        } else {\n          userArgs = argv.slice(1);\n        }\n        break;\n      case 'user':\n        userArgs = argv.slice(0);\n        break;\n      default:\n        throw new Error(`unexpected parse option { from: '${parseOptions.from}' }`);\n    }\n\n    // Find default name for program from arguments.\n    if (!this._name && this._scriptPath) this.nameFromFilename(this._scriptPath);\n    this._name = this._name || 'program';\n\n    return userArgs;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * program.parse(process.argv);\n   * program.parse(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * program.parse(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv] - optional, defaults to process.argv\n   * @param {Object} [parseOptions] - optionally specify style of options with from: node/user/electron\n   * @param {string} [parseOptions.from] - where the args are from: 'node', 'user', 'electron'\n   * @return {Command} `this` command for chaining\n   */\n\n  parse(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Parse `argv`, setting options and invoking commands when defined.\n   *\n   * Use parseAsync instead of parse if any of your action handlers are async. Returns a Promise.\n   *\n   * The default expectation is that the arguments are from node and have the application as argv[0]\n   * and the script being run in argv[1], with user parameters after that.\n   *\n   * @example\n   * await program.parseAsync(process.argv);\n   * await program.parseAsync(); // implicitly use process.argv and auto-detect node vs electron conventions\n   * await program.parseAsync(my-args, { from: 'user' }); // just user supplied arguments, nothing special about argv[0]\n   *\n   * @param {string[]} [argv]\n   * @param {Object} [parseOptions]\n   * @param {string} parseOptions.from - where the args are from: 'node', 'user', 'electron'\n   * @return {Promise}\n   */\n\n  async parseAsync(argv, parseOptions) {\n    const userArgs = this._prepareUserArgs(argv, parseOptions);\n    await this._parseCommand([], userArgs);\n\n    return this;\n  }\n\n  /**\n   * Execute a sub-command executable.\n   *\n   * @api private\n   */\n\n  _executeSubCommand(subcommand, args) {\n    args = args.slice();\n    let launchWithNode = false; // Use node for source targets so do not need to get permissions correct, and on Windows.\n    const sourceExt = ['.js', '.ts', '.tsx', '.mjs', '.cjs'];\n\n    function findFile(baseDir, baseName) {\n      // Look for specified file\n      const localBin = path.resolve(baseDir, baseName);\n      if (fs.existsSync(localBin)) return localBin;\n\n      // Stop looking if candidate already has an expected extension.\n      if (sourceExt.includes(path.extname(baseName))) return undefined;\n\n      // Try all the extensions.\n      const foundExt = sourceExt.find(ext => fs.existsSync(`${localBin}${ext}`));\n      if (foundExt) return `${localBin}${foundExt}`;\n\n      return undefined;\n    }\n\n    // Not checking for help first. Unlikely to have mandatory and executable, and can't robustly test for help flags in external command.\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // executableFile and executableDir might be full path, or just a name\n    let executableFile = subcommand._executableFile || `${this._name}-${subcommand._name}`;\n    let executableDir = this._executableDir || '';\n    if (this._scriptPath) {\n      let resolvedScriptPath; // resolve possible symlink for installed npm binary\n      try {\n        resolvedScriptPath = fs.realpathSync(this._scriptPath);\n      } catch (err) {\n        resolvedScriptPath = this._scriptPath;\n      }\n      executableDir = path.resolve(path.dirname(resolvedScriptPath), executableDir);\n    }\n\n    // Look for a local file in preference to a command in PATH.\n    if (executableDir) {\n      let localFile = findFile(executableDir, executableFile);\n\n      // Legacy search using prefix of script name instead of command name\n      if (!localFile && !subcommand._executableFile && this._scriptPath) {\n        const legacyName = path.basename(this._scriptPath, path.extname(this._scriptPath));\n        if (legacyName !== this._name) {\n          localFile = findFile(executableDir, `${legacyName}-${subcommand._name}`);\n        }\n      }\n      executableFile = localFile || executableFile;\n    }\n\n    launchWithNode = sourceExt.includes(path.extname(executableFile));\n\n    let proc;\n    if (process.platform !== 'win32') {\n      if (launchWithNode) {\n        args.unshift(executableFile);\n        // add executable arguments to spawn\n        args = incrementNodeInspectorPort(process.execArgv).concat(args);\n\n        proc = childProcess.spawn(process.argv[0], args, { stdio: 'inherit' });\n      } else {\n        proc = childProcess.spawn(executableFile, args, { stdio: 'inherit' });\n      }\n    } else {\n      args.unshift(executableFile);\n      // add executable arguments to spawn\n      args = incrementNodeInspectorPort(process.execArgv).concat(args);\n      proc = childProcess.spawn(process.execPath, args, { stdio: 'inherit' });\n    }\n\n    if (!proc.killed) { // testing mainly to avoid leak warnings during unit tests with mocked spawn\n      const signals = ['SIGUSR1', 'SIGUSR2', 'SIGTERM', 'SIGINT', 'SIGHUP'];\n      signals.forEach((signal) => {\n        // @ts-ignore\n        process.on(signal, () => {\n          if (proc.killed === false && proc.exitCode === null) {\n            proc.kill(signal);\n          }\n        });\n      });\n    }\n\n    // By default terminate process when spawned process terminates.\n    // Suppressing the exit if exitCallback defined is a bit messy and of limited use, but does allow process to stay running!\n    const exitCallback = this._exitCallback;\n    if (!exitCallback) {\n      proc.on('close', process.exit.bind(process));\n    } else {\n      proc.on('close', () => {\n        exitCallback(new CommanderError(process.exitCode || 0, 'commander.executeSubCommandAsync', '(close)'));\n      });\n    }\n    proc.on('error', (err) => {\n      // @ts-ignore\n      if (err.code === 'ENOENT') {\n        const executableDirMessage = executableDir\n          ? `searched for local subcommand relative to directory '${executableDir}'`\n          : 'no directory for search for local subcommand, use .executableDir() to supply a custom directory';\n        const executableMissing = `'${executableFile}' does not exist\n - if '${subcommand._name}' is not meant to be an executable command, remove description parameter from '.command()' and use '.description()' instead\n - if the default executable name is not suitable, use the executableFile option to supply a custom name or path\n - ${executableDirMessage}`;\n        throw new Error(executableMissing);\n      // @ts-ignore\n      } else if (err.code === 'EACCES') {\n        throw new Error(`'${executableFile}' not executable`);\n      }\n      if (!exitCallback) {\n        process.exit(1);\n      } else {\n        const wrappedError = new CommanderError(1, 'commander.executeSubCommandAsync', '(error)');\n        wrappedError.nestedError = err;\n        exitCallback(wrappedError);\n      }\n    });\n\n    // Store the reference to the child process\n    this.runningCommand = proc;\n  }\n\n  /**\n   * @api private\n   */\n\n  _dispatchSubcommand(commandName, operands, unknown) {\n    const subCommand = this._findCommand(commandName);\n    if (!subCommand) this.help({ error: true });\n\n    let promiseChain;\n    promiseChain = this._chainOrCallSubCommandHook(promiseChain, subCommand, 'preSubcommand');\n    promiseChain = this._chainOrCall(promiseChain, () => {\n      if (subCommand._executableHandler) {\n        this._executeSubCommand(subCommand, operands.concat(unknown));\n      } else {\n        return subCommand._parseCommand(operands, unknown);\n      }\n    });\n    return promiseChain;\n  }\n\n  /**\n   * Invoke help directly if possible, or dispatch if necessary.\n   * e.g. help foo\n   *\n   * @api private\n   */\n\n  _dispatchHelpCommand(subcommandName) {\n    if (!subcommandName) {\n      this.help();\n    }\n    const subCommand = this._findCommand(subcommandName);\n    if (subCommand && !subCommand._executableHandler) {\n      subCommand.help();\n    }\n\n    // Fallback to parsing the help flag to invoke the help.\n    return this._dispatchSubcommand(subcommandName, [], [\n      this._helpLongFlag || this._helpShortFlag\n    ]);\n  }\n\n  /**\n   * Check this.args against expected this.registeredArguments.\n   *\n   * @api private\n   */\n\n  _checkNumberOfArguments() {\n    // too few\n    this.registeredArguments.forEach((arg, i) => {\n      if (arg.required && this.args[i] == null) {\n        this.missingArgument(arg.name());\n      }\n    });\n    // too many\n    if (this.registeredArguments.length > 0 && this.registeredArguments[this.registeredArguments.length - 1].variadic) {\n      return;\n    }\n    if (this.args.length > this.registeredArguments.length) {\n      this._excessArguments(this.args);\n    }\n  }\n\n  /**\n   * Process this.args using this.registeredArguments and save as this.processedArgs!\n   *\n   * @api private\n   */\n\n  _processArguments() {\n    const myParseArg = (argument, value, previous) => {\n      // Extra processing for nice error message on parsing failure.\n      let parsedValue = value;\n      if (value !== null && argument.parseArg) {\n        const invalidValueMessage = `error: command-argument value '${value}' is invalid for argument '${argument.name()}'.`;\n        parsedValue = this._callParseArg(argument, value, previous, invalidValueMessage);\n      }\n      return parsedValue;\n    };\n\n    this._checkNumberOfArguments();\n\n    const processedArgs = [];\n    this.registeredArguments.forEach((declaredArg, index) => {\n      let value = declaredArg.defaultValue;\n      if (declaredArg.variadic) {\n        // Collect together remaining arguments for passing together as an array.\n        if (index < this.args.length) {\n          value = this.args.slice(index);\n          if (declaredArg.parseArg) {\n            value = value.reduce((processed, v) => {\n              return myParseArg(declaredArg, v, processed);\n            }, declaredArg.defaultValue);\n          }\n        } else if (value === undefined) {\n          value = [];\n        }\n      } else if (index < this.args.length) {\n        value = this.args[index];\n        if (declaredArg.parseArg) {\n          value = myParseArg(declaredArg, value, declaredArg.defaultValue);\n        }\n      }\n      processedArgs[index] = value;\n    });\n    this.processedArgs = processedArgs;\n  }\n\n  /**\n   * Once we have a promise we chain, but call synchronously until then.\n   *\n   * @param {Promise|undefined} promise\n   * @param {Function} fn\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCall(promise, fn) {\n    // thenable\n    if (promise && promise.then && typeof promise.then === 'function') {\n      // already have a promise, chain callback\n      return promise.then(() => fn());\n    }\n    // callback might return a promise\n    return fn();\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallHooks(promise, event) {\n    let result = promise;\n    const hooks = [];\n    this._getCommandAndAncestors()\n      .reverse()\n      .filter(cmd => cmd._lifeCycleHooks[event] !== undefined)\n      .forEach(hookedCommand => {\n        hookedCommand._lifeCycleHooks[event].forEach((callback) => {\n          hooks.push({ hookedCommand, callback });\n        });\n      });\n    if (event === 'postAction') {\n      hooks.reverse();\n    }\n\n    hooks.forEach((hookDetail) => {\n      result = this._chainOrCall(result, () => {\n        return hookDetail.callback(hookDetail.hookedCommand, this);\n      });\n    });\n    return result;\n  }\n\n  /**\n   *\n   * @param {Promise|undefined} promise\n   * @param {Command} subCommand\n   * @param {string} event\n   * @return {Promise|undefined}\n   * @api private\n   */\n\n  _chainOrCallSubCommandHook(promise, subCommand, event) {\n    let result = promise;\n    if (this._lifeCycleHooks[event] !== undefined) {\n      this._lifeCycleHooks[event].forEach((hook) => {\n        result = this._chainOrCall(result, () => {\n          return hook(this, subCommand);\n        });\n      });\n    }\n    return result;\n  }\n\n  /**\n   * Process arguments in context of this command.\n   * Returns action result, in case it is a promise.\n   *\n   * @api private\n   */\n\n  _parseCommand(operands, unknown) {\n    const parsed = this.parseOptions(unknown);\n    this._parseOptionsEnv(); // after cli, so parseArg not called on both cli and env\n    this._parseOptionsImplied();\n    operands = operands.concat(parsed.operands);\n    unknown = parsed.unknown;\n    this.args = operands.concat(unknown);\n\n    if (operands && this._findCommand(operands[0])) {\n      return this._dispatchSubcommand(operands[0], operands.slice(1), unknown);\n    }\n    if (this._hasImplicitHelpCommand() && operands[0] === this._helpCommandName) {\n      return this._dispatchHelpCommand(operands[1]);\n    }\n    if (this._defaultCommandName) {\n      outputHelpIfRequested(this, unknown); // Run the help for default command from parent rather than passing to default command\n      return this._dispatchSubcommand(this._defaultCommandName, operands, unknown);\n    }\n    if (this.commands.length && this.args.length === 0 && !this._actionHandler && !this._defaultCommandName) {\n      // probably missing subcommand and no handler, user needs help (and exit)\n      this.help({ error: true });\n    }\n\n    outputHelpIfRequested(this, parsed.unknown);\n    this._checkForMissingMandatoryOptions();\n    this._checkForConflictingOptions();\n\n    // We do not always call this check to avoid masking a \"better\" error, like unknown command.\n    const checkForUnknownOptions = () => {\n      if (parsed.unknown.length > 0) {\n        this.unknownOption(parsed.unknown[0]);\n      }\n    };\n\n    const commandEvent = `command:${this.name()}`;\n    if (this._actionHandler) {\n      checkForUnknownOptions();\n      this._processArguments();\n\n      let promiseChain;\n      promiseChain = this._chainOrCallHooks(promiseChain, 'preAction');\n      promiseChain = this._chainOrCall(promiseChain, () => this._actionHandler(this.processedArgs));\n      if (this.parent) {\n        promiseChain = this._chainOrCall(promiseChain, () => {\n          this.parent.emit(commandEvent, operands, unknown); // legacy\n        });\n      }\n      promiseChain = this._chainOrCallHooks(promiseChain, 'postAction');\n      return promiseChain;\n    }\n    if (this.parent && this.parent.listenerCount(commandEvent)) {\n      checkForUnknownOptions();\n      this._processArguments();\n      this.parent.emit(commandEvent, operands, unknown); // legacy\n    } else if (operands.length) {\n      if (this._findCommand('*')) { // legacy default command\n        return this._dispatchSubcommand('*', operands, unknown);\n      }\n      if (this.listenerCount('command:*')) {\n        // skip option check, emit event for possible misspelling suggestion\n        this.emit('command:*', operands, unknown);\n      } else if (this.commands.length) {\n        this.unknownCommand();\n      } else {\n        checkForUnknownOptions();\n        this._processArguments();\n      }\n    } else if (this.commands.length) {\n      checkForUnknownOptions();\n      // This command has subcommands and nothing hooked up at this level, so display help (and exit).\n      this.help({ error: true });\n    } else {\n      checkForUnknownOptions();\n      this._processArguments();\n      // fall through for caller to handle after calling .parse()\n    }\n  }\n\n  /**\n   * Find matching command.\n   *\n   * @api private\n   */\n  _findCommand(name) {\n    if (!name) return undefined;\n    return this.commands.find(cmd => cmd._name === name || cmd._aliases.includes(name));\n  }\n\n  /**\n   * Return an option matching `arg` if any.\n   *\n   * @param {string} arg\n   * @return {Option}\n   * @api private\n   */\n\n  _findOption(arg) {\n    return this.options.find(option => option.is(arg));\n  }\n\n  /**\n   * Display an error message if a mandatory option does not have a value.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n\n  _checkForMissingMandatoryOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd.options.forEach((anOption) => {\n        if (anOption.mandatory && (cmd.getOptionValue(anOption.attributeName()) === undefined)) {\n          cmd.missingMandatoryOptionValue(anOption);\n        }\n      });\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together in this.\n   *\n   * @api private\n   */\n  _checkForConflictingLocalOptions() {\n    const definedNonDefaultOptions = this.options.filter(\n      (option) => {\n        const optionKey = option.attributeName();\n        if (this.getOptionValue(optionKey) === undefined) {\n          return false;\n        }\n        return this.getOptionValueSource(optionKey) !== 'default';\n      }\n    );\n\n    const optionsWithConflicting = definedNonDefaultOptions.filter(\n      (option) => option.conflictsWith.length > 0\n    );\n\n    optionsWithConflicting.forEach((option) => {\n      const conflictingAndDefined = definedNonDefaultOptions.find((defined) =>\n        option.conflictsWith.includes(defined.attributeName())\n      );\n      if (conflictingAndDefined) {\n        this._conflictingOption(option, conflictingAndDefined);\n      }\n    });\n  }\n\n  /**\n   * Display an error message if conflicting options are used together.\n   * Called after checking for help flags in leaf subcommand.\n   *\n   * @api private\n   */\n  _checkForConflictingOptions() {\n    // Walk up hierarchy so can call in subcommand after checking for displaying help.\n    this._getCommandAndAncestors().forEach((cmd) => {\n      cmd._checkForConflictingLocalOptions();\n    });\n  }\n\n  /**\n   * Parse options from `argv` removing known options,\n   * and return argv split into operands and unknown arguments.\n   *\n   * Examples:\n   *\n   *     argv => operands, unknown\n   *     --known kkk op => [op], []\n   *     op --known kkk => [op], []\n   *     sub --unknown uuu op => [sub], [--unknown uuu op]\n   *     sub -- --unknown uuu op => [sub --unknown uuu op], []\n   *\n   * @param {String[]} argv\n   * @return {{operands: String[], unknown: String[]}}\n   */\n\n  parseOptions(argv) {\n    const operands = []; // operands, not options or values\n    const unknown = []; // first unknown option and remaining unknown args\n    let dest = operands;\n    const args = argv.slice();\n\n    function maybeOption(arg) {\n      return arg.length > 1 && arg[0] === '-';\n    }\n\n    // parse options\n    let activeVariadicOption = null;\n    while (args.length) {\n      const arg = args.shift();\n\n      // literal\n      if (arg === '--') {\n        if (dest === unknown) dest.push(arg);\n        dest.push(...args);\n        break;\n      }\n\n      if (activeVariadicOption && !maybeOption(arg)) {\n        this.emit(`option:${activeVariadicOption.name()}`, arg);\n        continue;\n      }\n      activeVariadicOption = null;\n\n      if (maybeOption(arg)) {\n        const option = this._findOption(arg);\n        // recognised option, call listener to assign value with possible custom processing\n        if (option) {\n          if (option.required) {\n            const value = args.shift();\n            if (value === undefined) this.optionMissingArgument(option);\n            this.emit(`option:${option.name()}`, value);\n          } else if (option.optional) {\n            let value = null;\n            // historical behaviour is optional value is following arg unless an option\n            if (args.length > 0 && !maybeOption(args[0])) {\n              value = args.shift();\n            }\n            this.emit(`option:${option.name()}`, value);\n          } else { // boolean flag\n            this.emit(`option:${option.name()}`);\n          }\n          activeVariadicOption = option.variadic ? option : null;\n          continue;\n        }\n      }\n\n      // Look for combo options following single dash, eat first one if known.\n      if (arg.length > 2 && arg[0] === '-' && arg[1] !== '-') {\n        const option = this._findOption(`-${arg[1]}`);\n        if (option) {\n          if (option.required || (option.optional && this._combineFlagAndOptionalValue)) {\n            // option with value following in same argument\n            this.emit(`option:${option.name()}`, arg.slice(2));\n          } else {\n            // boolean option, emit and put back remainder of arg for further processing\n            this.emit(`option:${option.name()}`);\n            args.unshift(`-${arg.slice(2)}`);\n          }\n          continue;\n        }\n      }\n\n      // Look for known long flag with value, like --foo=bar\n      if (/^--[^=]+=/.test(arg)) {\n        const index = arg.indexOf('=');\n        const option = this._findOption(arg.slice(0, index));\n        if (option && (option.required || option.optional)) {\n          this.emit(`option:${option.name()}`, arg.slice(index + 1));\n          continue;\n        }\n      }\n\n      // Not a recognised option by this command.\n      // Might be a command-argument, or subcommand option, or unknown option, or help command or option.\n\n      // An unknown option means further arguments also classified as unknown so can be reprocessed by subcommands.\n      if (maybeOption(arg)) {\n        dest = unknown;\n      }\n\n      // If using positionalOptions, stop processing our options at subcommand.\n      if ((this._enablePositionalOptions || this._passThroughOptions) && operands.length === 0 && unknown.length === 0) {\n        if (this._findCommand(arg)) {\n          operands.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        } else if (arg === this._helpCommandName && this._hasImplicitHelpCommand()) {\n          operands.push(arg);\n          if (args.length > 0) operands.push(...args);\n          break;\n        } else if (this._defaultCommandName) {\n          unknown.push(arg);\n          if (args.length > 0) unknown.push(...args);\n          break;\n        }\n      }\n\n      // If using passThroughOptions, stop processing options at first command-argument.\n      if (this._passThroughOptions) {\n        dest.push(arg);\n        if (args.length > 0) dest.push(...args);\n        break;\n      }\n\n      // add arg\n      dest.push(arg);\n    }\n\n    return { operands, unknown };\n  }\n\n  /**\n   * Return an object containing local option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  opts() {\n    if (this._storeOptionsAsProperties) {\n      // Preserve original behaviour so backwards compatible when still using properties\n      const result = {};\n      const len = this.options.length;\n\n      for (let i = 0; i < len; i++) {\n        const key = this.options[i].attributeName();\n        result[key] = key === this._versionOptionName ? this._version : this[key];\n      }\n      return result;\n    }\n\n    return this._optionValues;\n  }\n\n  /**\n   * Return an object containing merged local and global option values as key-value pairs.\n   *\n   * @return {Object}\n   */\n  optsWithGlobals() {\n    // globals overwrite locals\n    return this._getCommandAndAncestors().reduce(\n      (combinedOptions, cmd) => Object.assign(combinedOptions, cmd.opts()),\n      {}\n    );\n  }\n\n  /**\n   * Display error message and exit (or call exitOverride).\n   *\n   * @param {string} message\n   * @param {Object} [errorOptions]\n   * @param {string} [errorOptions.code] - an id string representing the error\n   * @param {number} [errorOptions.exitCode] - used with process.exit\n   */\n  error(message, errorOptions) {\n    // output handling\n    this._outputConfiguration.outputError(`${message}\\n`, this._outputConfiguration.writeErr);\n    if (typeof this._showHelpAfterError === 'string') {\n      this._outputConfiguration.writeErr(`${this._showHelpAfterError}\\n`);\n    } else if (this._showHelpAfterError) {\n      this._outputConfiguration.writeErr('\\n');\n      this.outputHelp({ error: true });\n    }\n\n    // exit handling\n    const config = errorOptions || {};\n    const exitCode = config.exitCode || 1;\n    const code = config.code || 'commander.error';\n    this._exit(exitCode, code, message);\n  }\n\n  /**\n   * Apply any option related environment variables, if option does\n   * not have a value from cli or client code.\n   *\n   * @api private\n   */\n  _parseOptionsEnv() {\n    this.options.forEach((option) => {\n      if (option.envVar && option.envVar in process.env) {\n        const optionKey = option.attributeName();\n        // Priority check. Do not overwrite cli or options from unknown source (client-code).\n        if (this.getOptionValue(optionKey) === undefined || ['default', 'config', 'env'].includes(this.getOptionValueSource(optionKey))) {\n          if (option.required || option.optional) { // option can take a value\n            // keep very simple, optional always takes value\n            this.emit(`optionEnv:${option.name()}`, process.env[option.envVar]);\n          } else { // boolean\n            // keep very simple, only care that envVar defined and not the value\n            this.emit(`optionEnv:${option.name()}`);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Apply any implied option values, if option is undefined or default value.\n   *\n   * @api private\n   */\n  _parseOptionsImplied() {\n    const dualHelper = new DualOptions(this.options);\n    const hasCustomOptionValue = (optionKey) => {\n      return this.getOptionValue(optionKey) !== undefined && !['default', 'implied'].includes(this.getOptionValueSource(optionKey));\n    };\n    this.options\n      .filter(option => (option.implied !== undefined) &&\n        hasCustomOptionValue(option.attributeName()) &&\n        dualHelper.valueFromOption(this.getOptionValue(option.attributeName()), option))\n      .forEach((option) => {\n        Object.keys(option.implied)\n          .filter(impliedKey => !hasCustomOptionValue(impliedKey))\n          .forEach(impliedKey => {\n            this.setOptionValueWithSource(impliedKey, option.implied[impliedKey], 'implied');\n          });\n      });\n  }\n\n  /**\n   * Argument `name` is missing.\n   *\n   * @param {string} name\n   * @api private\n   */\n\n  missingArgument(name) {\n    const message = `error: missing required argument '${name}'`;\n    this.error(message, { code: 'commander.missingArgument' });\n  }\n\n  /**\n   * `Option` is missing an argument.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  optionMissingArgument(option) {\n    const message = `error: option '${option.flags}' argument missing`;\n    this.error(message, { code: 'commander.optionMissingArgument' });\n  }\n\n  /**\n   * `Option` does not have a value, and is a mandatory option.\n   *\n   * @param {Option} option\n   * @api private\n   */\n\n  missingMandatoryOptionValue(option) {\n    const message = `error: required option '${option.flags}' not specified`;\n    this.error(message, { code: 'commander.missingMandatoryOptionValue' });\n  }\n\n  /**\n   * `Option` conflicts with another option.\n   *\n   * @param {Option} option\n   * @param {Option} conflictingOption\n   * @api private\n   */\n  _conflictingOption(option, conflictingOption) {\n    // The calling code does not know whether a negated option is the source of the\n    // value, so do some work to take an educated guess.\n    const findBestOptionFromValue = (option) => {\n      const optionKey = option.attributeName();\n      const optionValue = this.getOptionValue(optionKey);\n      const negativeOption = this.options.find(target => target.negate && optionKey === target.attributeName());\n      const positiveOption = this.options.find(target => !target.negate && optionKey === target.attributeName());\n      if (negativeOption && (\n        (negativeOption.presetArg === undefined && optionValue === false) ||\n        (negativeOption.presetArg !== undefined && optionValue === negativeOption.presetArg)\n      )) {\n        return negativeOption;\n      }\n      return positiveOption || option;\n    };\n\n    const getErrorMessage = (option) => {\n      const bestOption = findBestOptionFromValue(option);\n      const optionKey = bestOption.attributeName();\n      const source = this.getOptionValueSource(optionKey);\n      if (source === 'env') {\n        return `environment variable '${bestOption.envVar}'`;\n      }\n      return `option '${bestOption.flags}'`;\n    };\n\n    const message = `error: ${getErrorMessage(option)} cannot be used with ${getErrorMessage(conflictingOption)}`;\n    this.error(message, { code: 'commander.conflictingOption' });\n  }\n\n  /**\n   * Unknown option `flag`.\n   *\n   * @param {string} flag\n   * @api private\n   */\n\n  unknownOption(flag) {\n    if (this._allowUnknownOption) return;\n    let suggestion = '';\n\n    if (flag.startsWith('--') && this._showSuggestionAfterError) {\n      // Looping to pick up the global options too\n      let candidateFlags = [];\n      let command = this;\n      do {\n        const moreFlags = command.createHelp().visibleOptions(command)\n          .filter(option => option.long)\n          .map(option => option.long);\n        candidateFlags = candidateFlags.concat(moreFlags);\n        command = command.parent;\n      } while (command && !command._enablePositionalOptions);\n      suggestion = suggestSimilar(flag, candidateFlags);\n    }\n\n    const message = `error: unknown option '${flag}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownOption' });\n  }\n\n  /**\n   * Excess arguments, more than expected.\n   *\n   * @param {string[]} receivedArgs\n   * @api private\n   */\n\n  _excessArguments(receivedArgs) {\n    if (this._allowExcessArguments) return;\n\n    const expected = this.registeredArguments.length;\n    const s = (expected === 1) ? '' : 's';\n    const forSubcommand = this.parent ? ` for '${this.name()}'` : '';\n    const message = `error: too many arguments${forSubcommand}. Expected ${expected} argument${s} but got ${receivedArgs.length}.`;\n    this.error(message, { code: 'commander.excessArguments' });\n  }\n\n  /**\n   * Unknown command.\n   *\n   * @api private\n   */\n\n  unknownCommand() {\n    const unknownName = this.args[0];\n    let suggestion = '';\n\n    if (this._showSuggestionAfterError) {\n      const candidateNames = [];\n      this.createHelp().visibleCommands(this).forEach((command) => {\n        candidateNames.push(command.name());\n        // just visible alias\n        if (command.alias()) candidateNames.push(command.alias());\n      });\n      suggestion = suggestSimilar(unknownName, candidateNames);\n    }\n\n    const message = `error: unknown command '${unknownName}'${suggestion}`;\n    this.error(message, { code: 'commander.unknownCommand' });\n  }\n\n  /**\n   * Get or set the program version.\n   *\n   * This method auto-registers the \"-V, --version\" option which will print the version number.\n   *\n   * You can optionally supply the flags and description to override the defaults.\n   *\n   * @param {string} [str]\n   * @param {string} [flags]\n   * @param {string} [description]\n   * @return {this | string | undefined} `this` command for chaining, or version string if no arguments\n   */\n\n  version(str, flags, description) {\n    if (str === undefined) return this._version;\n    this._version = str;\n    flags = flags || '-V, --version';\n    description = description || 'output the version number';\n    const versionOption = this.createOption(flags, description);\n    this._versionOptionName = versionOption.attributeName(); // [sic] not defined in constructor, partly legacy, partly only needed at root\n    this.options.push(versionOption);\n    this.on('option:' + versionOption.name(), () => {\n      this._outputConfiguration.writeOut(`${str}\\n`);\n      this._exit(0, 'commander.version', str);\n    });\n    return this;\n  }\n\n  /**\n   * Set the description.\n   *\n   * @param {string} [str]\n   * @param {Object} [argsDescription]\n   * @return {string|Command}\n   */\n  description(str, argsDescription) {\n    if (str === undefined && argsDescription === undefined) return this._description;\n    this._description = str;\n    if (argsDescription) {\n      this._argsDescription = argsDescription;\n    }\n    return this;\n  }\n\n  /**\n   * Set the summary. Used when listed as subcommand of parent.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n  summary(str) {\n    if (str === undefined) return this._summary;\n    this._summary = str;\n    return this;\n  }\n\n  /**\n   * Set an alias for the command.\n   *\n   * You may call more than once to add multiple aliases. Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string} [alias]\n   * @return {string|Command}\n   */\n\n  alias(alias) {\n    if (alias === undefined) return this._aliases[0]; // just return first, for backwards compatibility\n\n    /** @type {Command} */\n    let command = this;\n    if (this.commands.length !== 0 && this.commands[this.commands.length - 1]._executableHandler) {\n      // assume adding alias for last added executable subcommand, rather than this\n      command = this.commands[this.commands.length - 1];\n    }\n\n    if (alias === command._name) throw new Error('Command alias can\\'t be the same as its name');\n\n    command._aliases.push(alias);\n    return this;\n  }\n\n  /**\n   * Set aliases for the command.\n   *\n   * Only the first alias is shown in the auto-generated help.\n   *\n   * @param {string[]} [aliases]\n   * @return {string[]|Command}\n   */\n\n  aliases(aliases) {\n    // Getter for the array of aliases is the main reason for having aliases() in addition to alias().\n    if (aliases === undefined) return this._aliases;\n\n    aliases.forEach((alias) => this.alias(alias));\n    return this;\n  }\n\n  /**\n   * Set / get the command usage `str`.\n   *\n   * @param {string} [str]\n   * @return {String|Command}\n   */\n\n  usage(str) {\n    if (str === undefined) {\n      if (this._usage) return this._usage;\n\n      const args = this.registeredArguments.map((arg) => {\n        return humanReadableArgName(arg);\n      });\n      return [].concat(\n        (this.options.length || this._hasHelpOption ? '[options]' : []),\n        (this.commands.length ? '[command]' : []),\n        (this.registeredArguments.length ? args : [])\n      ).join(' ');\n    }\n\n    this._usage = str;\n    return this;\n  }\n\n  /**\n   * Get or set the name of the command.\n   *\n   * @param {string} [str]\n   * @return {string|Command}\n   */\n\n  name(str) {\n    if (str === undefined) return this._name;\n    this._name = str;\n    return this;\n  }\n\n  /**\n   * Set the name of the command from script filename, such as process.argv[1],\n   * or require.main.filename, or __filename.\n   *\n   * (Used internally and public although not documented in README.)\n   *\n   * @example\n   * program.nameFromFilename(require.main.filename);\n   *\n   * @param {string} filename\n   * @return {Command}\n   */\n\n  nameFromFilename(filename) {\n    this._name = path.basename(filename, path.extname(filename));\n\n    return this;\n  }\n\n  /**\n   * Get or set the directory for searching for executable subcommands of this command.\n   *\n   * @example\n   * program.executableDir(__dirname);\n   * // or\n   * program.executableDir('subcommands');\n   *\n   * @param {string} [path]\n   * @return {string|null|Command}\n   */\n\n  executableDir(path) {\n    if (path === undefined) return this._executableDir;\n    this._executableDir = path;\n    return this;\n  }\n\n  /**\n   * Return program help documentation.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to wrap for stderr instead of stdout\n   * @return {string}\n   */\n\n  helpInformation(contextOptions) {\n    const helper = this.createHelp();\n    if (helper.helpWidth === undefined) {\n      helper.helpWidth = (contextOptions && contextOptions.error) ? this._outputConfiguration.getErrHelpWidth() : this._outputConfiguration.getOutHelpWidth();\n    }\n    return helper.formatHelp(this, helper);\n  }\n\n  /**\n   * @api private\n   */\n\n  _getHelpContext(contextOptions) {\n    contextOptions = contextOptions || {};\n    const context = { error: !!contextOptions.error };\n    let write;\n    if (context.error) {\n      write = (arg) => this._outputConfiguration.writeErr(arg);\n    } else {\n      write = (arg) => this._outputConfiguration.writeOut(arg);\n    }\n    context.write = contextOptions.write || write;\n    context.command = this;\n    return context;\n  }\n\n  /**\n   * Output help information for this command.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean } | Function} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  outputHelp(contextOptions) {\n    let deprecatedCallback;\n    if (typeof contextOptions === 'function') {\n      deprecatedCallback = contextOptions;\n      contextOptions = undefined;\n    }\n    const context = this._getHelpContext(contextOptions);\n\n    this._getCommandAndAncestors().reverse().forEach(command => command.emit('beforeAllHelp', context));\n    this.emit('beforeHelp', context);\n\n    let helpInformation = this.helpInformation(context);\n    if (deprecatedCallback) {\n      helpInformation = deprecatedCallback(helpInformation);\n      if (typeof helpInformation !== 'string' && !Buffer.isBuffer(helpInformation)) {\n        throw new Error('outputHelp callback must return a string or a Buffer');\n      }\n    }\n    context.write(helpInformation);\n\n    if (this._helpLongFlag) {\n      this.emit(this._helpLongFlag); // deprecated\n    }\n    this.emit('afterHelp', context);\n    this._getCommandAndAncestors().forEach(command => command.emit('afterAllHelp', context));\n  }\n\n  /**\n   * You can pass in flags and a description to override the help\n   * flags and help description for your command. Pass in false to\n   * disable the built-in help option.\n   *\n   * @param {string | boolean} [flags]\n   * @param {string} [description]\n   * @return {Command} `this` command for chaining\n   */\n\n  helpOption(flags, description) {\n    if (typeof flags === 'boolean') {\n      this._hasHelpOption = flags;\n      return this;\n    }\n    this._helpFlags = flags || this._helpFlags;\n    this._helpDescription = description || this._helpDescription;\n\n    const helpFlags = splitOptionFlags(this._helpFlags);\n    this._helpShortFlag = helpFlags.shortFlag;\n    this._helpLongFlag = helpFlags.longFlag;\n\n    return this;\n  }\n\n  /**\n   * Output help information and exit.\n   *\n   * Outputs built-in help, and custom text added using `.addHelpText()`.\n   *\n   * @param {{ error: boolean }} [contextOptions] - pass {error:true} to write to stderr instead of stdout\n   */\n\n  help(contextOptions) {\n    this.outputHelp(contextOptions);\n    let exitCode = process.exitCode || 0;\n    if (exitCode === 0 && contextOptions && typeof contextOptions !== 'function' && contextOptions.error) {\n      exitCode = 1;\n    }\n    // message: do not have all displayed text available so only passing placeholder.\n    this._exit(exitCode, 'commander.help', '(outputHelp)');\n  }\n\n  /**\n   * Add additional text to be displayed with the built-in help.\n   *\n   * Position is 'before' or 'after' to affect just this command,\n   * and 'beforeAll' or 'afterAll' to affect this command and all its subcommands.\n   *\n   * @param {string} position - before or after built-in help\n   * @param {string | Function} text - string to add, or a function returning a string\n   * @return {Command} `this` command for chaining\n   */\n  addHelpText(position, text) {\n    const allowedValues = ['beforeAll', 'before', 'after', 'afterAll'];\n    if (!allowedValues.includes(position)) {\n      throw new Error(`Unexpected value for position to addHelpText.\nExpecting one of '${allowedValues.join(\"', '\")}'`);\n    }\n    const helpEvent = `${position}Help`;\n    this.on(helpEvent, (context) => {\n      let helpStr;\n      if (typeof text === 'function') {\n        helpStr = text({ error: context.error, command: context.command });\n      } else {\n        helpStr = text;\n      }\n      // Ignore falsy value when nothing to output.\n      if (helpStr) {\n        context.write(`${helpStr}\\n`);\n      }\n    });\n    return this;\n  }\n}\n\n/**\n * Output help information if help flags specified\n *\n * @param {Command} cmd - command to output help for\n * @param {Array} args - array of options to search for help flags\n * @api private\n */\n\nfunction outputHelpIfRequested(cmd, args) {\n  const helpOption = cmd._hasHelpOption && args.find(arg => arg === cmd._helpLongFlag || arg === cmd._helpShortFlag);\n  if (helpOption) {\n    cmd.outputHelp();\n    // (Do not have all displayed text available so only passing placeholder.)\n    cmd._exit(0, 'commander.helpDisplayed', '(outputHelp)');\n  }\n}\n\n/**\n * Scan arguments and increment port number for inspect calls (to avoid conflicts when spawning new command).\n *\n * @param {string[]} args - array of arguments from node.execArgv\n * @returns {string[]}\n * @api private\n */\n\nfunction incrementNodeInspectorPort(args) {\n  // Testing for these options:\n  //  --inspect[=[host:]port]\n  //  --inspect-brk[=[host:]port]\n  //  --inspect-port=[host:]port\n  return args.map((arg) => {\n    if (!arg.startsWith('--inspect')) {\n      return arg;\n    }\n    let debugOption;\n    let debugHost = '127.0.0.1';\n    let debugPort = '9229';\n    let match;\n    if ((match = arg.match(/^(--inspect(-brk)?)$/)) !== null) {\n      // e.g. --inspect\n      debugOption = match[1];\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+)$/)) !== null) {\n      debugOption = match[1];\n      if (/^\\d+$/.test(match[3])) {\n        // e.g. --inspect=1234\n        debugPort = match[3];\n      } else {\n        // e.g. --inspect=localhost\n        debugHost = match[3];\n      }\n    } else if ((match = arg.match(/^(--inspect(-brk|-port)?)=([^:]+):(\\d+)$/)) !== null) {\n      // e.g. --inspect=localhost:1234\n      debugOption = match[1];\n      debugHost = match[3];\n      debugPort = match[4];\n    }\n\n    if (debugOption && debugPort !== '0') {\n      return `${debugOption}=${debugHost}:${parseInt(debugPort) + 1}`;\n    }\n    return arg;\n  });\n}\n\nexports.Command = Command;\n","const { Argument } = require('./lib/argument.js');\nconst { Command } = require('./lib/command.js');\nconst { CommanderError, InvalidArgumentError } = require('./lib/error.js');\nconst { Help } = require('./lib/help.js');\nconst { Option } = require('./lib/option.js');\n\n/**\n * Expose the root command.\n */\n\nexports = module.exports = new Command();\nexports.program = exports; // More explicit access to global command.\n// createArgument, createCommand, and createOption are implicitly available as they are methods on program.\n\n/**\n * Expose classes\n */\n\nexports.Command = Command;\nexports.Option = Option;\nexports.Argument = Argument;\nexports.Help = Help;\n\nexports.CommanderError = CommanderError;\nexports.InvalidArgumentError = InvalidArgumentError;\nexports.InvalidOptionArgumentError = InvalidArgumentError; // Deprecated\n","import commander from './index.js';\n\n// wrapper to provide named exports for ESM.\nexport const {\n  program,\n  createCommand,\n  createArgument,\n  createOption,\n  CommanderError,\n  InvalidArgumentError,\n  InvalidOptionArgumentError, // deprecated old name\n  Command,\n  Argument,\n  Option,\n  Help\n} = commander;\n","#!/usr/bin/env node\r\n\r\nimport { Command } from \"commander\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport {\r\n  CSSTokenizer,\r\n  CSSParser,\r\n  CSSValidator,\r\n  CSSASTOptimizer,\r\n  CSSCodeGenerator,\r\n} from \"@obinexuscomputing/css\";\r\n\r\nimport {\r\n  HTMLTokenizer,\r\n  HTMLParser,\r\n  HTMLValidator,\r\n  HTMLASTOptimizer,\r\n  HTMLCodeGenerator,\r\n} from \"@obinexuscomputing/html\";\r\n\r\nimport {\r\n  JSTokenizer,\r\n  JSASTBuilder,\r\n  JSValidator,\r\n  JSAstMinimizer,\r\n  JSCodeGenerator,\r\n} from \"@obinexuscomputing/js\";\r\n\r\nimport {\r\n  DOMXMLTokenizer,\r\n  DOMXMLParser,\r\n  DOMXMLValidator,\r\n  DOMXMLASTOptimizer,\r\n  DOMXMLGenerator,\r\n} from \"@obinexuscomputing/xml\";\r\n\r\n// Fetch package version dynamically\r\nconst packageJsonPath = path.resolve(__dirname, \"../package.json\");\r\nconst packageJson = JSON.parse(fs.readFileSync(packageJsonPath, \"utf-8\"));\r\nconst packageVersion = packageJson.version;\r\n\r\nconst program = new Command();\r\n\r\n// Validation helpers\r\nfunction validateFile(filePath: string): string {\r\n  const absolutePath = path.resolve(filePath);\r\n  if (!fs.existsSync(absolutePath)) {\r\n    throw new Error(`File not found: ${filePath}`);\r\n  }\r\n  return absolutePath;\r\n}\r\n\r\ninterface ProcessOptions {\r\n  optimize?: boolean;\r\n  validate?: boolean;\r\n  format?: \"json\" | \"text\";\r\n  output?: string;\r\n  debug?: boolean;\r\n}\r\n\r\n// Unified file processing function\r\nasync function processFile(\r\n  file: string,\r\n  type: \"css\" | \"html\" | \"js\" | \"xml\" | \"asm\",\r\n  options: ProcessOptions,\r\n) {\r\n  const filePath = validateFile(file);\r\n  const content = fs.readFileSync(filePath, \"utf-8\");\r\n\r\n  const result: any = {};\r\n  let tokens: any, ast: any;\r\n\r\n  try {\r\n    switch (type) {\r\n      case \"css\":\r\n        tokens = new CSSTokenizer(content).tokenize();\r\n        ast = new CSSParser(tokens).parse();\r\n        if (options.validate) {\r\n          const validator = new CSSValidator(ast);\r\n          const validationErrors = validator.validate();\r\n          if (validationErrors.length > 0) {\r\n            throw new Error(\r\n              `Validation errors:\\n${validationErrors.join(\"\\n\")}`,\r\n            );\r\n          }\r\n        }\r\n        if (options.optimize) {\r\n          const optimizer = new CSSASTOptimizer(ast);\r\n          ast = optimizer.optimize();\r\n          const generator = new CSSCodeGenerator(ast);\r\n          result.optimized = generator.generate();\r\n        }\r\n        break;\r\n\r\n      case \"html\":\r\n        tokens = new HTMLTokenizer(content).tokenize();\r\n        ast = new HTMLParser().parse(tokens);\r\n        if (options.validate) {\r\n          const validator = new HTMLValidator();\r\n          const validationResult = validator.validate(ast);\r\n          if (!validationResult.valid) {\r\n            throw new Error(\r\n              `Validation errors:\\n${validationResult.errors.join(\"\\n\")}`,\r\n            );\r\n          }\r\n        }\r\n        if (options.optimize) {\r\n          const optimizer = new HTMLASTOptimizer();\r\n          ast = optimizer.optimize(ast);\r\n          const generator = new HTMLCodeGenerator();\r\n          result.optimized = generator.generateHTML(ast);\r\n        }\r\n        break;\r\n\r\n      case \"js\":\r\n        tokens = new JSTokenizer().tokenize(content);\r\n        ast = new JSASTBuilder(tokens).buildAST();\r\n        if (options.validate) {\r\n          const validator = new JSValidator();\r\n          const validationErrors = validator.validate(ast);\r\n          if (validationErrors.length > 0) {\r\n            throw new Error(\r\n              `Validation errors:\\n${validationErrors.join(\"\\n\")}`,\r\n            );\r\n          }\r\n        }\r\n        if (options.optimize) {\r\n          const minimizer = new JSAstMinimizer();\r\n          ast = minimizer.optimize(ast);\r\n          const generator = new JSCodeGenerator();\r\n          result.optimized = generator.generate(ast);\r\n        }\r\n        break;\r\n\r\n      case \"xml\":\r\n        tokens = new DOMXMLTokenizer(content).tokenize();\r\n        ast = new DOMXMLParser(tokens).parse();\r\n        if (options.validate) {\r\n          const validator = new DOMXMLValidator();\r\n          const validationResult = validator.validate(ast);\r\n          if (!validationResult.valid) {\r\n            throw new Error(\r\n              `Validation errors:\\n${validationResult.errors\r\n                .map((e) => `${e.code}: ${e.message}`)\r\n                .join(\"\\n\")}`,\r\n            );\r\n          }\r\n        }\r\n        if (options.optimize) {\r\n          const optimizer = new DOMXMLASTOptimizer();\r\n          ast = optimizer.optimize(ast);\r\n          const generator = new DOMXMLGenerator();\r\n          result.optimized = generator.generate(ast);\r\n        }\r\n        break;\r\n\r\n      case \"asm\":\r\n        // Placeholder for ASM processing logic\r\n        throw new Error(\"ASM processing is not implemented yet.\");\r\n    }\r\n\r\n    result.tokens = tokens;\r\n    result.ast = ast;\r\n\r\n    if (options.debug) {\r\n      console.debug(`[DEBUG] Tokens: ${JSON.stringify(tokens, null, 2)}`);\r\n      console.debug(`[DEBUG] AST: ${JSON.stringify(ast, null, 2)}`);\r\n    }\r\n\r\n    const output =\r\n      options.format === \"text\" ? JSON.stringify(result, null, 2) : result;\r\n\r\n    if (options.output) {\r\n      fs.writeFileSync(\r\n        options.output,\r\n        typeof output === \"string\" ? output : JSON.stringify(output, null, 2),\r\n      );\r\n    } else {\r\n      console.log(output);\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof Error) {\r\n      console.error(`[Error] ${error.message}`);\r\n    } else {\r\n      console.error(\"[Error] Unknown error occurred\");\r\n    }\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Command registration function\r\nconst registerCommand = (\r\n  type: \"css\" | \"html\" | \"js\" | \"xml\" | \"asm\",\r\n  description: string,\r\n) => {\r\n  const cmd = program\r\n    .command(type)\r\n    .description(`${description} processing commands`);\r\n  cmd\r\n    .command(\"parse\")\r\n    .argument(\"<file>\", `${description} file to parse`)\r\n    .description(`Parse a ${description} file`)\r\n    .option(\"-o, --optimize\", \"Optimize the AST\")\r\n    .option(\"-v, --validate\", \"Validate the AST\")\r\n    .option(\"-f, --format <format>\", \"Output format (json or text)\", \"json\")\r\n    .option(\"--output <file>\", \"Output file (defaults to stdout)\")\r\n    .option(\"-d, --debug\", \"Enable debug output\")\r\n    .action((file, options) => {\r\n      processFile(file, type, options).catch((error) => {\r\n        console.error(\"Error:\", error.message);\r\n        process.exit(1);\r\n      });\r\n    });\r\n};\r\n\r\n// Register commands for each type\r\nregisterCommand(\"css\", \"CSS\");\r\nregisterCommand(\"html\", \"HTML\");\r\nregisterCommand(\"js\", \"JavaScript\");\r\nregisterCommand(\"xml\", \"XML\");\r\nregisterCommand(\"asm\", \"ASM\");\r\n\r\n// CLI entry point\r\nprogram\r\n  .name(\"@obinexuscomputing/dom-asm\")\r\n  .version(packageVersion) // Dynamically fetch version from package.json\r\n  .description(\"DOM ASM CLI tool for parsing and analyzing web assets\");\r\n\r\n// Parse command-line arguments\r\nprogram.parse(process.argv);\r\n"],"names":["CommanderError","InvalidArgumentError","require$$0","humanReadableArgName","Argument","Help","splitOptionFlags","Option","DualOptions","suggestSimilar","suggestSimilar_1","require$$2","require$$3","process","require$$5","require$$6","require$$7","require$$8","require$$9","Command","require$$1","require$$4","program","path","fs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}